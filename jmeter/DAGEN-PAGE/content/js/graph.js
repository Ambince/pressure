/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 4188.0, "minX": 0.0, "maxY": 17867.0, "series": [{"data": [[0.0, 5471.0], [0.1, 5613.0], [0.2, 5635.0], [0.3, 5635.0], [0.4, 5658.0], [0.5, 5700.0], [0.6, 5740.0], [0.7, 5791.0], [0.8, 5812.0], [0.9, 5820.0], [1.0, 5831.0], [1.1, 5859.0], [1.2, 5898.0], [1.3, 5904.0], [1.4, 5904.0], [1.5, 5924.0], [1.6, 5944.0], [1.7, 5961.0], [1.8, 5973.0], [1.9, 5992.0], [2.0, 5993.0], [2.1, 6005.0], [2.2, 6012.0], [2.3, 6013.0], [2.4, 6018.0], [2.5, 6020.0], [2.6, 6025.0], [2.7, 6028.0], [2.8, 6040.0], [2.9, 6046.0], [3.0, 6052.0], [3.1, 6088.0], [3.2, 6104.0], [3.3, 6105.0], [3.4, 6130.0], [3.5, 6158.0], [3.6, 6165.0], [3.7, 6206.0], [3.8, 6209.0], [3.9, 6230.0], [4.0, 6289.0], [4.1, 6338.0], [4.2, 6353.0], [4.3, 6367.0], [4.4, 6411.0], [4.5, 6411.0], [4.6, 6414.0], [4.7, 6506.0], [4.8, 6538.0], [4.9, 6545.0], [5.0, 6556.0], [5.1, 6591.0], [5.2, 6600.0], [5.3, 6654.0], [5.4, 6686.0], [5.5, 6688.0], [5.6, 6694.0], [5.7, 6697.0], [5.8, 6699.0], [5.9, 6704.0], [6.0, 6721.0], [6.1, 6727.0], [6.2, 6737.0], [6.3, 6747.0], [6.4, 6805.0], [6.5, 6817.0], [6.6, 6855.0], [6.7, 6887.0], [6.8, 6888.0], [6.9, 6898.0], [7.0, 6917.0], [7.1, 6919.0], [7.2, 6928.0], [7.3, 6930.0], [7.4, 6952.0], [7.5, 6963.0], [7.6, 6984.0], [7.7, 6985.0], [7.8, 6988.0], [7.9, 6992.0], [8.0, 6998.0], [8.1, 7014.0], [8.2, 7018.0], [8.3, 7020.0], [8.4, 7030.0], [8.5, 7036.0], [8.6, 7037.0], [8.7, 7041.0], [8.8, 7041.0], [8.9, 7043.0], [9.0, 7052.0], [9.1, 7054.0], [9.2, 7062.0], [9.3, 7082.0], [9.4, 7084.0], [9.5, 7090.0], [9.6, 7100.0], [9.7, 7111.0], [9.8, 7115.0], [9.9, 7116.0], [10.0, 7140.0], [10.1, 7165.0], [10.2, 7172.0], [10.3, 7173.0], [10.4, 7175.0], [10.5, 7194.0], [10.6, 7196.0], [10.7, 7213.0], [10.8, 7217.0], [10.9, 7218.0], [11.0, 7225.0], [11.1, 7225.0], [11.2, 7230.0], [11.3, 7273.0], [11.4, 7282.0], [11.5, 7282.0], [11.6, 7306.0], [11.7, 7313.0], [11.8, 7314.0], [11.9, 7322.0], [12.0, 7342.0], [12.1, 7344.0], [12.2, 7351.0], [12.3, 7355.0], [12.4, 7382.0], [12.5, 7407.0], [12.6, 7410.0], [12.7, 7430.0], [12.8, 7432.0], [12.9, 7435.0], [13.0, 7448.0], [13.1, 7456.0], [13.2, 7461.0], [13.3, 7463.0], [13.4, 7483.0], [13.5, 7484.0], [13.6, 7486.0], [13.7, 7488.0], [13.8, 7490.0], [13.9, 7527.0], [14.0, 7551.0], [14.1, 7556.0], [14.2, 7588.0], [14.3, 7604.0], [14.4, 7627.0], [14.5, 7628.0], [14.6, 7722.0], [14.7, 7834.0], [14.8, 7926.0], [14.9, 7927.0], [15.0, 7938.0], [15.1, 7969.0], [15.2, 7991.0], [15.3, 7999.0], [15.4, 8003.0], [15.5, 8025.0], [15.6, 8038.0], [15.7, 8040.0], [15.8, 8103.0], [15.9, 8118.0], [16.0, 8124.0], [16.1, 8129.0], [16.2, 8137.0], [16.3, 8149.0], [16.4, 8150.0], [16.5, 8160.0], [16.6, 8192.0], [16.7, 8193.0], [16.8, 8202.0], [16.9, 8240.0], [17.0, 8256.0], [17.1, 8266.0], [17.2, 8268.0], [17.3, 8289.0], [17.4, 8295.0], [17.5, 8297.0], [17.6, 8317.0], [17.7, 8366.0], [17.8, 8368.0], [17.9, 8380.0], [18.0, 8410.0], [18.1, 8542.0], [18.2, 8577.0], [18.3, 8671.0], [18.4, 8686.0], [18.5, 8692.0], [18.6, 8698.0], [18.7, 8707.0], [18.8, 8715.0], [18.9, 8715.0], [19.0, 8722.0], [19.1, 8723.0], [19.2, 8724.0], [19.3, 8727.0], [19.4, 8733.0], [19.5, 8769.0], [19.6, 8775.0], [19.7, 8785.0], [19.8, 8799.0], [19.9, 8837.0], [20.0, 8844.0], [20.1, 8867.0], [20.2, 8900.0], [20.3, 8912.0], [20.4, 8915.0], [20.5, 8920.0], [20.6, 8922.0], [20.7, 8955.0], [20.8, 8959.0], [20.9, 8976.0], [21.0, 8986.0], [21.1, 9000.0], [21.2, 9003.0], [21.3, 9010.0], [21.4, 9055.0], [21.5, 9058.0], [21.6, 9078.0], [21.7, 9100.0], [21.8, 9108.0], [21.9, 9111.0], [22.0, 9123.0], [22.1, 9128.0], [22.2, 9136.0], [22.3, 9139.0], [22.4, 9140.0], [22.5, 9141.0], [22.6, 9143.0], [22.7, 9150.0], [22.8, 9159.0], [22.9, 9173.0], [23.0, 9174.0], [23.1, 9176.0], [23.2, 9184.0], [23.3, 9185.0], [23.4, 9202.0], [23.5, 9206.0], [23.6, 9207.0], [23.7, 9207.0], [23.8, 9214.0], [23.9, 9217.0], [24.0, 9220.0], [24.1, 9245.0], [24.2, 9246.0], [24.3, 9249.0], [24.4, 9251.0], [24.5, 9255.0], [24.6, 9256.0], [24.7, 9257.0], [24.8, 9263.0], [24.9, 9266.0], [25.0, 9271.0], [25.1, 9276.0], [25.2, 9277.0], [25.3, 9287.0], [25.4, 9313.0], [25.5, 9313.0], [25.6, 9315.0], [25.7, 9332.0], [25.8, 9347.0], [25.9, 9359.0], [26.0, 9363.0], [26.1, 9364.0], [26.2, 9366.0], [26.3, 9371.0], [26.4, 9376.0], [26.5, 9378.0], [26.6, 9383.0], [26.7, 9385.0], [26.8, 9388.0], [26.9, 9406.0], [27.0, 9420.0], [27.1, 9422.0], [27.2, 9433.0], [27.3, 9435.0], [27.4, 9461.0], [27.5, 9481.0], [27.6, 9509.0], [27.7, 9513.0], [27.8, 9518.0], [27.9, 9518.0], [28.0, 9518.0], [28.1, 9519.0], [28.2, 9530.0], [28.3, 9530.0], [28.4, 9548.0], [28.5, 9589.0], [28.6, 9599.0], [28.7, 9622.0], [28.8, 9632.0], [28.9, 9644.0], [29.0, 9649.0], [29.1, 9695.0], [29.2, 9707.0], [29.3, 9712.0], [29.4, 9726.0], [29.5, 9729.0], [29.6, 9737.0], [29.7, 9742.0], [29.8, 9746.0], [29.9, 9746.0], [30.0, 9780.0], [30.1, 9824.0], [30.2, 9853.0], [30.3, 9877.0], [30.4, 9882.0], [30.5, 9900.0], [30.6, 9920.0], [30.7, 9937.0], [30.8, 9942.0], [30.9, 9954.0], [31.0, 9995.0], [31.1, 10002.0], [31.2, 10019.0], [31.3, 10048.0], [31.4, 10048.0], [31.5, 10064.0], [31.6, 10078.0], [31.7, 10122.0], [31.8, 10144.0], [31.9, 10161.0], [32.0, 10173.0], [32.1, 10205.0], [32.2, 10206.0], [32.3, 10209.0], [32.4, 10226.0], [32.5, 10226.0], [32.6, 10233.0], [32.7, 10241.0], [32.8, 10244.0], [32.9, 10248.0], [33.0, 10262.0], [33.1, 10265.0], [33.2, 10271.0], [33.3, 10279.0], [33.4, 10293.0], [33.5, 10299.0], [33.6, 10333.0], [33.7, 10342.0], [33.8, 10348.0], [33.9, 10362.0], [34.0, 10366.0], [34.1, 10372.0], [34.2, 10375.0], [34.3, 10385.0], [34.4, 10422.0], [34.5, 10461.0], [34.6, 10464.0], [34.7, 10472.0], [34.8, 10485.0], [34.9, 10497.0], [35.0, 12838.0], [35.1, 12843.0], [35.2, 12869.0], [35.3, 12869.0], [35.4, 12870.0], [35.5, 12880.0], [35.6, 12894.0], [35.7, 12927.0], [35.8, 12934.0], [35.9, 12935.0], [36.0, 12939.0], [36.1, 12940.0], [36.2, 12942.0], [36.3, 12944.0], [36.4, 12944.0], [36.5, 12965.0], [36.6, 12975.0], [36.7, 12976.0], [36.8, 12981.0], [36.9, 12983.0], [37.0, 12983.0], [37.1, 12994.0], [37.2, 12998.0], [37.3, 13002.0], [37.4, 13002.0], [37.5, 13035.0], [37.6, 13035.0], [37.7, 13045.0], [37.8, 13052.0], [37.9, 13062.0], [38.0, 13066.0], [38.1, 13069.0], [38.2, 13070.0], [38.3, 13070.0], [38.4, 13071.0], [38.5, 13073.0], [38.6, 13082.0], [38.7, 13093.0], [38.8, 13095.0], [38.9, 13096.0], [39.0, 13098.0], [39.1, 13102.0], [39.2, 13106.0], [39.3, 13108.0], [39.4, 13109.0], [39.5, 13113.0], [39.6, 13113.0], [39.7, 13117.0], [39.8, 13126.0], [39.9, 13127.0], [40.0, 13130.0], [40.1, 13131.0], [40.2, 13133.0], [40.3, 13138.0], [40.4, 13149.0], [40.5, 13178.0], [40.6, 13190.0], [40.7, 13196.0], [40.8, 13206.0], [40.9, 13214.0], [41.0, 13220.0], [41.1, 13227.0], [41.2, 13237.0], [41.3, 13241.0], [41.4, 13243.0], [41.5, 13246.0], [41.6, 13247.0], [41.7, 13277.0], [41.8, 13288.0], [41.9, 17118.0], [42.0, 17131.0], [42.1, 17164.0], [42.2, 17174.0], [42.3, 17180.0], [42.4, 17182.0], [42.5, 17185.0], [42.6, 17186.0], [42.7, 17190.0], [42.8, 17192.0], [42.9, 17199.0], [43.0, 17200.0], [43.1, 17204.0], [43.2, 17210.0], [43.3, 17222.0], [43.4, 17224.0], [43.5, 17227.0], [43.6, 17232.0], [43.7, 17235.0], [43.8, 17248.0], [43.9, 17249.0], [44.0, 17249.0], [44.1, 17250.0], [44.2, 17253.0], [44.3, 17255.0], [44.4, 17257.0], [44.5, 17258.0], [44.6, 17271.0], [44.7, 17275.0], [44.8, 17275.0], [44.9, 17276.0], [45.0, 17276.0], [45.1, 17276.0], [45.2, 17278.0], [45.3, 17280.0], [45.4, 17280.0], [45.5, 17280.0], [45.6, 17282.0], [45.7, 17282.0], [45.8, 17287.0], [45.9, 17292.0], [46.0, 17294.0], [46.1, 17302.0], [46.2, 17303.0], [46.3, 17304.0], [46.4, 17305.0], [46.5, 17305.0], [46.6, 17305.0], [46.7, 17308.0], [46.8, 17310.0], [46.9, 17310.0], [47.0, 17311.0], [47.1, 17311.0], [47.2, 17311.0], [47.3, 17312.0], [47.4, 17314.0], [47.5, 17314.0], [47.6, 17317.0], [47.7, 17318.0], [47.8, 17318.0], [47.9, 17320.0], [48.0, 17321.0], [48.1, 17322.0], [48.2, 17323.0], [48.3, 17323.0], [48.4, 17325.0], [48.5, 17325.0], [48.6, 17326.0], [48.7, 17327.0], [48.8, 17327.0], [48.9, 17328.0], [49.0, 17332.0], [49.1, 17333.0], [49.2, 17333.0], [49.3, 17334.0], [49.4, 17339.0], [49.5, 17341.0], [49.6, 17342.0], [49.7, 17342.0], [49.8, 17344.0], [49.9, 17348.0], [50.0, 17348.0], [50.1, 17348.0], [50.2, 17349.0], [50.3, 17349.0], [50.4, 17351.0], [50.5, 17351.0], [50.6, 17351.0], [50.7, 17352.0], [50.8, 17353.0], [50.9, 17353.0], [51.0, 17355.0], [51.1, 17356.0], [51.2, 17358.0], [51.3, 17358.0], [51.4, 17358.0], [51.5, 17359.0], [51.6, 17360.0], [51.7, 17360.0], [51.8, 17364.0], [51.9, 17365.0], [52.0, 17370.0], [52.1, 17370.0], [52.2, 17372.0], [52.3, 17373.0], [52.4, 17373.0], [52.5, 17373.0], [52.6, 17374.0], [52.7, 17374.0], [52.8, 17375.0], [52.9, 17376.0], [53.0, 17381.0], [53.1, 17382.0], [53.2, 17384.0], [53.3, 17385.0], [53.4, 17385.0], [53.5, 17385.0], [53.6, 17388.0], [53.7, 17390.0], [53.8, 17391.0], [53.9, 17391.0], [54.0, 17392.0], [54.1, 17393.0], [54.2, 17394.0], [54.3, 17395.0], [54.4, 17396.0], [54.5, 17396.0], [54.6, 17396.0], [54.7, 17397.0], [54.8, 17398.0], [54.9, 17398.0], [55.0, 17401.0], [55.1, 17402.0], [55.2, 17403.0], [55.3, 17403.0], [55.4, 17404.0], [55.5, 17404.0], [55.6, 17404.0], [55.7, 17404.0], [55.8, 17405.0], [55.9, 17405.0], [56.0, 17407.0], [56.1, 17407.0], [56.2, 17409.0], [56.3, 17410.0], [56.4, 17410.0], [56.5, 17411.0], [56.6, 17412.0], [56.7, 17412.0], [56.8, 17412.0], [56.9, 17412.0], [57.0, 17413.0], [57.1, 17414.0], [57.2, 17414.0], [57.3, 17415.0], [57.4, 17415.0], [57.5, 17416.0], [57.6, 17416.0], [57.7, 17417.0], [57.8, 17419.0], [57.9, 17420.0], [58.0, 17420.0], [58.1, 17421.0], [58.2, 17421.0], [58.3, 17422.0], [58.4, 17422.0], [58.5, 17423.0], [58.6, 17425.0], [58.7, 17425.0], [58.8, 17425.0], [58.9, 17426.0], [59.0, 17426.0], [59.1, 17427.0], [59.2, 17428.0], [59.3, 17428.0], [59.4, 17429.0], [59.5, 17429.0], [59.6, 17430.0], [59.7, 17432.0], [59.8, 17433.0], [59.9, 17434.0], [60.0, 17434.0], [60.1, 17434.0], [60.2, 17435.0], [60.3, 17435.0], [60.4, 17435.0], [60.5, 17435.0], [60.6, 17438.0], [60.7, 17441.0], [60.8, 17442.0], [60.9, 17443.0], [61.0, 17445.0], [61.1, 17445.0], [61.2, 17445.0], [61.3, 17445.0], [61.4, 17446.0], [61.5, 17446.0], [61.6, 17447.0], [61.7, 17447.0], [61.8, 17447.0], [61.9, 17448.0], [62.0, 17450.0], [62.1, 17450.0], [62.2, 17452.0], [62.3, 17452.0], [62.4, 17453.0], [62.5, 17453.0], [62.6, 17453.0], [62.7, 17455.0], [62.8, 17455.0], [62.9, 17457.0], [63.0, 17457.0], [63.1, 17457.0], [63.2, 17457.0], [63.3, 17457.0], [63.4, 17458.0], [63.5, 17459.0], [63.6, 17459.0], [63.7, 17460.0], [63.8, 17460.0], [63.9, 17461.0], [64.0, 17462.0], [64.1, 17462.0], [64.2, 17463.0], [64.3, 17463.0], [64.4, 17464.0], [64.5, 17464.0], [64.6, 17464.0], [64.7, 17464.0], [64.8, 17464.0], [64.9, 17465.0], [65.0, 17465.0], [65.1, 17466.0], [65.2, 17466.0], [65.3, 17467.0], [65.4, 17467.0], [65.5, 17468.0], [65.6, 17468.0], [65.7, 17468.0], [65.8, 17468.0], [65.9, 17470.0], [66.0, 17470.0], [66.1, 17470.0], [66.2, 17472.0], [66.3, 17473.0], [66.4, 17473.0], [66.5, 17473.0], [66.6, 17474.0], [66.7, 17474.0], [66.8, 17475.0], [66.9, 17475.0], [67.0, 17476.0], [67.1, 17476.0], [67.2, 17476.0], [67.3, 17476.0], [67.4, 17478.0], [67.5, 17478.0], [67.6, 17478.0], [67.7, 17479.0], [67.8, 17479.0], [67.9, 17481.0], [68.0, 17481.0], [68.1, 17481.0], [68.2, 17482.0], [68.3, 17482.0], [68.4, 17483.0], [68.5, 17483.0], [68.6, 17483.0], [68.7, 17484.0], [68.8, 17485.0], [68.9, 17487.0], [69.0, 17487.0], [69.1, 17487.0], [69.2, 17487.0], [69.3, 17488.0], [69.4, 17489.0], [69.5, 17490.0], [69.6, 17490.0], [69.7, 17493.0], [69.8, 17493.0], [69.9, 17493.0], [70.0, 17493.0], [70.1, 17493.0], [70.2, 17493.0], [70.3, 17496.0], [70.4, 17497.0], [70.5, 17497.0], [70.6, 17499.0], [70.7, 17500.0], [70.8, 17500.0], [70.9, 17500.0], [71.0, 17502.0], [71.1, 17502.0], [71.2, 17503.0], [71.3, 17504.0], [71.4, 17504.0], [71.5, 17507.0], [71.6, 17507.0], [71.7, 17508.0], [71.8, 17508.0], [71.9, 17509.0], [72.0, 17509.0], [72.1, 17510.0], [72.2, 17510.0], [72.3, 17510.0], [72.4, 17511.0], [72.5, 17513.0], [72.6, 17513.0], [72.7, 17513.0], [72.8, 17513.0], [72.9, 17513.0], [73.0, 17514.0], [73.1, 17514.0], [73.2, 17515.0], [73.3, 17515.0], [73.4, 17516.0], [73.5, 17516.0], [73.6, 17516.0], [73.7, 17517.0], [73.8, 17518.0], [73.9, 17519.0], [74.0, 17520.0], [74.1, 17521.0], [74.2, 17522.0], [74.3, 17522.0], [74.4, 17522.0], [74.5, 17524.0], [74.6, 17524.0], [74.7, 17524.0], [74.8, 17524.0], [74.9, 17524.0], [75.0, 17525.0], [75.1, 17525.0], [75.2, 17527.0], [75.3, 17527.0], [75.4, 17527.0], [75.5, 17527.0], [75.6, 17528.0], [75.7, 17531.0], [75.8, 17531.0], [75.9, 17532.0], [76.0, 17533.0], [76.1, 17534.0], [76.2, 17534.0], [76.3, 17534.0], [76.4, 17535.0], [76.5, 17535.0], [76.6, 17535.0], [76.7, 17536.0], [76.8, 17536.0], [76.9, 17536.0], [77.0, 17536.0], [77.1, 17537.0], [77.2, 17537.0], [77.3, 17539.0], [77.4, 17539.0], [77.5, 17540.0], [77.6, 17540.0], [77.7, 17540.0], [77.8, 17540.0], [77.9, 17541.0], [78.0, 17543.0], [78.1, 17543.0], [78.2, 17543.0], [78.3, 17544.0], [78.4, 17544.0], [78.5, 17544.0], [78.6, 17545.0], [78.7, 17545.0], [78.8, 17547.0], [78.9, 17547.0], [79.0, 17548.0], [79.1, 17548.0], [79.2, 17548.0], [79.3, 17548.0], [79.4, 17549.0], [79.5, 17550.0], [79.6, 17550.0], [79.7, 17551.0], [79.8, 17551.0], [79.9, 17552.0], [80.0, 17552.0], [80.1, 17552.0], [80.2, 17552.0], [80.3, 17553.0], [80.4, 17554.0], [80.5, 17554.0], [80.6, 17557.0], [80.7, 17559.0], [80.8, 17559.0], [80.9, 17560.0], [81.0, 17561.0], [81.1, 17562.0], [81.2, 17562.0], [81.3, 17563.0], [81.4, 17563.0], [81.5, 17565.0], [81.6, 17565.0], [81.7, 17565.0], [81.8, 17571.0], [81.9, 17571.0], [82.0, 17571.0], [82.1, 17572.0], [82.2, 17574.0], [82.3, 17575.0], [82.4, 17576.0], [82.5, 17577.0], [82.6, 17577.0], [82.7, 17578.0], [82.8, 17579.0], [82.9, 17579.0], [83.0, 17582.0], [83.1, 17582.0], [83.2, 17582.0], [83.3, 17583.0], [83.4, 17583.0], [83.5, 17583.0], [83.6, 17584.0], [83.7, 17584.0], [83.8, 17586.0], [83.9, 17586.0], [84.0, 17586.0], [84.1, 17586.0], [84.2, 17586.0], [84.3, 17587.0], [84.4, 17587.0], [84.5, 17587.0], [84.6, 17588.0], [84.7, 17588.0], [84.8, 17590.0], [84.9, 17592.0], [85.0, 17592.0], [85.1, 17593.0], [85.2, 17593.0], [85.3, 17593.0], [85.4, 17593.0], [85.5, 17594.0], [85.6, 17594.0], [85.7, 17595.0], [85.8, 17595.0], [85.9, 17596.0], [86.0, 17597.0], [86.1, 17597.0], [86.2, 17597.0], [86.3, 17597.0], [86.4, 17598.0], [86.5, 17599.0], [86.6, 17601.0], [86.7, 17602.0], [86.8, 17603.0], [86.9, 17603.0], [87.0, 17604.0], [87.1, 17604.0], [87.2, 17605.0], [87.3, 17606.0], [87.4, 17607.0], [87.5, 17608.0], [87.6, 17609.0], [87.7, 17610.0], [87.8, 17610.0], [87.9, 17610.0], [88.0, 17610.0], [88.1, 17611.0], [88.2, 17612.0], [88.3, 17612.0], [88.4, 17613.0], [88.5, 17613.0], [88.6, 17615.0], [88.7, 17617.0], [88.8, 17618.0], [88.9, 17619.0], [89.0, 17619.0], [89.1, 17621.0], [89.2, 17621.0], [89.3, 17621.0], [89.4, 17622.0], [89.5, 17622.0], [89.6, 17622.0], [89.7, 17623.0], [89.8, 17624.0], [89.9, 17625.0], [90.0, 17625.0], [90.1, 17626.0], [90.2, 17627.0], [90.3, 17627.0], [90.4, 17630.0], [90.5, 17630.0], [90.6, 17631.0], [90.7, 17631.0], [90.8, 17632.0], [90.9, 17632.0], [91.0, 17633.0], [91.1, 17636.0], [91.2, 17639.0], [91.3, 17639.0], [91.4, 17639.0], [91.5, 17639.0], [91.6, 17640.0], [91.7, 17640.0], [91.8, 17640.0], [91.9, 17640.0], [92.0, 17641.0], [92.1, 17641.0], [92.2, 17642.0], [92.3, 17642.0], [92.4, 17642.0], [92.5, 17642.0], [92.6, 17644.0], [92.7, 17644.0], [92.8, 17645.0], [92.9, 17645.0], [93.0, 17647.0], [93.1, 17648.0], [93.2, 17648.0], [93.3, 17648.0], [93.4, 17648.0], [93.5, 17649.0], [93.6, 17649.0], [93.7, 17649.0], [93.8, 17652.0], [93.9, 17653.0], [94.0, 17654.0], [94.1, 17654.0], [94.2, 17655.0], [94.3, 17655.0], [94.4, 17656.0], [94.5, 17657.0], [94.6, 17658.0], [94.7, 17658.0], [94.8, 17658.0], [94.9, 17661.0], [95.0, 17662.0], [95.1, 17665.0], [95.2, 17667.0], [95.3, 17667.0], [95.4, 17670.0], [95.5, 17671.0], [95.6, 17672.0], [95.7, 17672.0], [95.8, 17676.0], [95.9, 17676.0], [96.0, 17678.0], [96.1, 17678.0], [96.2, 17679.0], [96.3, 17681.0], [96.4, 17683.0], [96.5, 17683.0], [96.6, 17684.0], [96.7, 17685.0], [96.8, 17686.0], [96.9, 17686.0], [97.0, 17687.0], [97.1, 17687.0], [97.2, 17688.0], [97.3, 17688.0], [97.4, 17698.0], [97.5, 17700.0], [97.6, 17702.0], [97.7, 17707.0], [97.8, 17708.0], [97.9, 17712.0], [98.0, 17716.0], [98.1, 17717.0], [98.2, 17722.0], [98.3, 17734.0], [98.4, 17737.0], [98.5, 17739.0], [98.6, 17741.0], [98.7, 17751.0], [98.8, 17753.0], [98.9, 17754.0], [99.0, 17766.0], [99.1, 17767.0], [99.2, 17767.0], [99.3, 17769.0], [99.4, 17770.0], [99.5, 17772.0], [99.6, 17777.0], [99.7, 17791.0], [99.8, 17794.0], [99.9, 17799.0], [100.0, 17867.0]], "isOverall": false, "label": "主页", "isController": false}, {"data": [[0.0, 6551.0], [0.1, 6551.0], [0.2, 6554.0], [0.3, 6554.0], [0.4, 6560.0], [0.5, 6561.0], [0.6, 6561.0], [0.7, 6562.0], [0.8, 6562.0], [0.9, 6563.0], [1.0, 6563.0], [1.1, 6565.0], [1.2, 6565.0], [1.3, 6565.0], [1.4, 6567.0], [1.5, 6568.0], [1.6, 6568.0], [1.7, 6569.0], [1.8, 6569.0], [1.9, 6572.0], [2.0, 6572.0], [2.1, 6572.0], [2.2, 6573.0], [2.3, 6573.0], [2.4, 6573.0], [2.5, 6573.0], [2.6, 6574.0], [2.7, 6574.0], [2.8, 6574.0], [2.9, 6575.0], [3.0, 6576.0], [3.1, 6576.0], [3.2, 6576.0], [3.3, 6577.0], [3.4, 6577.0], [3.5, 6578.0], [3.6, 6578.0], [3.7, 6579.0], [3.8, 6579.0], [3.9, 6579.0], [4.0, 6579.0], [4.1, 6580.0], [4.2, 6580.0], [4.3, 6580.0], [4.4, 6580.0], [4.5, 6581.0], [4.6, 6581.0], [4.7, 6584.0], [4.8, 6584.0], [4.9, 6586.0], [5.0, 6586.0], [5.1, 6586.0], [5.2, 6588.0], [5.3, 6588.0], [5.4, 6589.0], [5.5, 6591.0], [5.6, 6591.0], [5.7, 6593.0], [5.8, 6593.0], [5.9, 6593.0], [6.0, 6593.0], [6.1, 6593.0], [6.2, 6594.0], [6.3, 6595.0], [6.4, 6595.0], [6.5, 6595.0], [6.6, 6597.0], [6.7, 6597.0], [6.8, 6598.0], [6.9, 6598.0], [7.0, 6599.0], [7.1, 6599.0], [7.2, 6599.0], [7.3, 6599.0], [7.4, 6600.0], [7.5, 6600.0], [7.6, 6600.0], [7.7, 6601.0], [7.8, 6601.0], [7.9, 6601.0], [8.0, 6601.0], [8.1, 6601.0], [8.2, 6601.0], [8.3, 6602.0], [8.4, 6602.0], [8.5, 6602.0], [8.6, 6602.0], [8.7, 6603.0], [8.8, 6603.0], [8.9, 6603.0], [9.0, 6603.0], [9.1, 6603.0], [9.2, 6604.0], [9.3, 6604.0], [9.4, 6604.0], [9.5, 6604.0], [9.6, 6604.0], [9.7, 6605.0], [9.8, 6605.0], [9.9, 6605.0], [10.0, 6605.0], [10.1, 6605.0], [10.2, 6606.0], [10.3, 6606.0], [10.4, 6606.0], [10.5, 6606.0], [10.6, 6606.0], [10.7, 6607.0], [10.8, 6607.0], [10.9, 6607.0], [11.0, 6607.0], [11.1, 6607.0], [11.2, 6607.0], [11.3, 6608.0], [11.4, 6608.0], [11.5, 6608.0], [11.6, 6608.0], [11.7, 6608.0], [11.8, 6608.0], [11.9, 6608.0], [12.0, 6608.0], [12.1, 6608.0], [12.2, 6609.0], [12.3, 6609.0], [12.4, 6609.0], [12.5, 6609.0], [12.6, 6609.0], [12.7, 6609.0], [12.8, 6610.0], [12.9, 6610.0], [13.0, 6610.0], [13.1, 6610.0], [13.2, 6611.0], [13.3, 6611.0], [13.4, 6611.0], [13.5, 6611.0], [13.6, 6611.0], [13.7, 6611.0], [13.8, 6611.0], [13.9, 6611.0], [14.0, 6611.0], [14.1, 6612.0], [14.2, 6612.0], [14.3, 6612.0], [14.4, 6612.0], [14.5, 6613.0], [14.6, 6613.0], [14.7, 6613.0], [14.8, 6613.0], [14.9, 6613.0], [15.0, 6613.0], [15.1, 6613.0], [15.2, 6613.0], [15.3, 6613.0], [15.4, 6613.0], [15.5, 6613.0], [15.6, 6614.0], [15.7, 6614.0], [15.8, 6614.0], [15.9, 6614.0], [16.0, 6614.0], [16.1, 6614.0], [16.2, 6614.0], [16.3, 6615.0], [16.4, 6615.0], [16.5, 6615.0], [16.6, 6615.0], [16.7, 6615.0], [16.8, 6615.0], [16.9, 6615.0], [17.0, 6616.0], [17.1, 6616.0], [17.2, 6616.0], [17.3, 6616.0], [17.4, 6616.0], [17.5, 6616.0], [17.6, 6617.0], [17.7, 6617.0], [17.8, 6617.0], [17.9, 6617.0], [18.0, 6618.0], [18.1, 6618.0], [18.2, 6618.0], [18.3, 6618.0], [18.4, 6618.0], [18.5, 6618.0], [18.6, 6619.0], [18.7, 6619.0], [18.8, 6619.0], [18.9, 6619.0], [19.0, 6619.0], [19.1, 6619.0], [19.2, 6619.0], [19.3, 6620.0], [19.4, 6620.0], [19.5, 6621.0], [19.6, 6621.0], [19.7, 6621.0], [19.8, 6621.0], [19.9, 6621.0], [20.0, 6622.0], [20.1, 6622.0], [20.2, 6622.0], [20.3, 6622.0], [20.4, 6622.0], [20.5, 6622.0], [20.6, 6623.0], [20.7, 6623.0], [20.8, 6623.0], [20.9, 6623.0], [21.0, 6624.0], [21.1, 6624.0], [21.2, 6624.0], [21.3, 6624.0], [21.4, 6624.0], [21.5, 6624.0], [21.6, 6624.0], [21.7, 6624.0], [21.8, 6625.0], [21.9, 6625.0], [22.0, 6626.0], [22.1, 6627.0], [22.2, 6627.0], [22.3, 6627.0], [22.4, 6627.0], [22.5, 6628.0], [22.6, 6629.0], [22.7, 6629.0], [22.8, 6629.0], [22.9, 6629.0], [23.0, 6630.0], [23.1, 6630.0], [23.2, 6630.0], [23.3, 6631.0], [23.4, 6631.0], [23.5, 6632.0], [23.6, 6632.0], [23.7, 6632.0], [23.8, 6633.0], [23.9, 6633.0], [24.0, 6634.0], [24.1, 6635.0], [24.2, 6635.0], [24.3, 6637.0], [24.4, 6639.0], [24.5, 6640.0], [24.6, 6642.0], [24.7, 6645.0], [24.8, 8671.0], [24.9, 8676.0], [25.0, 8680.0], [25.1, 8681.0], [25.2, 8683.0], [25.3, 8684.0], [25.4, 8685.0], [25.5, 8685.0], [25.6, 8686.0], [25.7, 8688.0], [25.8, 8689.0], [25.9, 8691.0], [26.0, 8692.0], [26.1, 8693.0], [26.2, 8694.0], [26.3, 8694.0], [26.4, 8694.0], [26.5, 8695.0], [26.6, 8695.0], [26.7, 8697.0], [26.8, 8699.0], [26.9, 8702.0], [27.0, 8704.0], [27.1, 8705.0], [27.2, 8705.0], [27.3, 8706.0], [27.4, 8709.0], [27.5, 8709.0], [27.6, 8710.0], [27.7, 8710.0], [27.8, 8710.0], [27.9, 8710.0], [28.0, 8711.0], [28.1, 8711.0], [28.2, 8711.0], [28.3, 8714.0], [28.4, 8715.0], [28.5, 8715.0], [28.6, 8715.0], [28.7, 8717.0], [28.8, 8719.0], [28.9, 8719.0], [29.0, 8721.0], [29.1, 8721.0], [29.2, 8721.0], [29.3, 8721.0], [29.4, 8722.0], [29.5, 8724.0], [29.6, 9542.0], [29.7, 9590.0], [29.8, 9592.0], [29.9, 9603.0], [30.0, 9605.0], [30.1, 9606.0], [30.2, 9606.0], [30.3, 9607.0], [30.4, 9608.0], [30.5, 9610.0], [30.6, 9612.0], [30.7, 9612.0], [30.8, 9613.0], [30.9, 9614.0], [31.0, 9614.0], [31.1, 9614.0], [31.2, 9614.0], [31.3, 9616.0], [31.4, 9618.0], [31.5, 9619.0], [31.6, 9620.0], [31.7, 9620.0], [31.8, 9620.0], [31.9, 9621.0], [32.0, 9622.0], [32.1, 9622.0], [32.2, 9623.0], [32.3, 9624.0], [32.4, 9624.0], [32.5, 9624.0], [32.6, 9625.0], [32.7, 9626.0], [32.8, 9626.0], [32.9, 9627.0], [33.0, 9627.0], [33.1, 9627.0], [33.2, 9627.0], [33.3, 9628.0], [33.4, 9629.0], [33.5, 9629.0], [33.6, 9629.0], [33.7, 9631.0], [33.8, 9631.0], [33.9, 9632.0], [34.0, 9632.0], [34.1, 9632.0], [34.2, 9632.0], [34.3, 9632.0], [34.4, 9633.0], [34.5, 9633.0], [34.6, 9634.0], [34.7, 9634.0], [34.8, 9635.0], [34.9, 9635.0], [35.0, 9636.0], [35.1, 9637.0], [35.2, 9637.0], [35.3, 9637.0], [35.4, 9637.0], [35.5, 9637.0], [35.6, 9638.0], [35.7, 9639.0], [35.8, 9640.0], [35.9, 9640.0], [36.0, 9640.0], [36.1, 9640.0], [36.2, 9640.0], [36.3, 9640.0], [36.4, 9640.0], [36.5, 9641.0], [36.6, 9641.0], [36.7, 9641.0], [36.8, 9642.0], [36.9, 9642.0], [37.0, 9642.0], [37.1, 9642.0], [37.2, 9643.0], [37.3, 9643.0], [37.4, 9643.0], [37.5, 9643.0], [37.6, 9644.0], [37.7, 9644.0], [37.8, 9644.0], [37.9, 9645.0], [38.0, 9645.0], [38.1, 9645.0], [38.2, 9645.0], [38.3, 9646.0], [38.4, 9646.0], [38.5, 9646.0], [38.6, 9647.0], [38.7, 9647.0], [38.8, 9647.0], [38.9, 9647.0], [39.0, 9648.0], [39.1, 9649.0], [39.2, 9649.0], [39.3, 9649.0], [39.4, 9650.0], [39.5, 9650.0], [39.6, 9650.0], [39.7, 9651.0], [39.8, 9651.0], [39.9, 9651.0], [40.0, 9651.0], [40.1, 9652.0], [40.2, 9652.0], [40.3, 9652.0], [40.4, 9652.0], [40.5, 9653.0], [40.6, 9654.0], [40.7, 9654.0], [40.8, 9654.0], [40.9, 9655.0], [41.0, 9655.0], [41.1, 9655.0], [41.2, 9656.0], [41.3, 9656.0], [41.4, 9656.0], [41.5, 9656.0], [41.6, 9656.0], [41.7, 9657.0], [41.8, 9657.0], [41.9, 9657.0], [42.0, 9657.0], [42.1, 9658.0], [42.2, 9658.0], [42.3, 9658.0], [42.4, 9658.0], [42.5, 9658.0], [42.6, 9658.0], [42.7, 9659.0], [42.8, 9659.0], [42.9, 9659.0], [43.0, 9660.0], [43.1, 9660.0], [43.2, 9660.0], [43.3, 9660.0], [43.4, 9661.0], [43.5, 9661.0], [43.6, 9662.0], [43.7, 9662.0], [43.8, 9662.0], [43.9, 9662.0], [44.0, 9662.0], [44.1, 9663.0], [44.2, 9663.0], [44.3, 9663.0], [44.4, 9663.0], [44.5, 9664.0], [44.6, 9664.0], [44.7, 9664.0], [44.8, 9665.0], [44.9, 9665.0], [45.0, 9665.0], [45.1, 9665.0], [45.2, 9665.0], [45.3, 9666.0], [45.4, 9666.0], [45.5, 9666.0], [45.6, 9667.0], [45.7, 9667.0], [45.8, 9667.0], [45.9, 9668.0], [46.0, 9668.0], [46.1, 9669.0], [46.2, 9670.0], [46.3, 9670.0], [46.4, 9671.0], [46.5, 9671.0], [46.6, 9671.0], [46.7, 9672.0], [46.8, 9672.0], [46.9, 9674.0], [47.0, 9674.0], [47.1, 9674.0], [47.2, 9674.0], [47.3, 9674.0], [47.4, 9674.0], [47.5, 9675.0], [47.6, 9675.0], [47.7, 9676.0], [47.8, 9677.0], [47.9, 9677.0], [48.0, 9678.0], [48.1, 9678.0], [48.2, 9680.0], [48.3, 9680.0], [48.4, 9680.0], [48.5, 9682.0], [48.6, 9682.0], [48.7, 9682.0], [48.8, 9682.0], [48.9, 9683.0], [49.0, 9684.0], [49.1, 9684.0], [49.2, 9685.0], [49.3, 9685.0], [49.4, 9686.0], [49.5, 9686.0], [49.6, 9687.0], [49.7, 9687.0], [49.8, 9687.0], [49.9, 9687.0], [50.0, 9687.0], [50.1, 9688.0], [50.2, 9688.0], [50.3, 9688.0], [50.4, 9691.0], [50.5, 9691.0], [50.6, 9692.0], [50.7, 9693.0], [50.8, 9693.0], [50.9, 9693.0], [51.0, 9694.0], [51.1, 9695.0], [51.2, 9695.0], [51.3, 9695.0], [51.4, 9696.0], [51.5, 9696.0], [51.6, 9698.0], [51.7, 9699.0], [51.8, 9699.0], [51.9, 9701.0], [52.0, 9701.0], [52.1, 9702.0], [52.2, 9702.0], [52.3, 9703.0], [52.4, 9705.0], [52.5, 9705.0], [52.6, 9708.0], [52.7, 9709.0], [52.8, 9711.0], [52.9, 9711.0], [53.0, 9712.0], [53.1, 9716.0], [53.2, 9719.0], [53.3, 9722.0], [53.4, 9724.0], [53.5, 9733.0], [53.6, 9735.0], [53.7, 9736.0], [53.8, 9738.0], [53.9, 9742.0], [54.0, 9743.0], [54.1, 9747.0], [54.2, 9754.0], [54.3, 9780.0], [54.4, 9817.0], [54.5, 11240.0], [54.6, 11240.0], [54.7, 11241.0], [54.8, 11245.0], [54.9, 11249.0], [55.0, 11257.0], [55.1, 11257.0], [55.2, 11260.0], [55.3, 11261.0], [55.4, 11263.0], [55.5, 11264.0], [55.6, 11265.0], [55.7, 11267.0], [55.8, 11267.0], [55.9, 11267.0], [56.0, 11267.0], [56.1, 11271.0], [56.2, 11272.0], [56.3, 11272.0], [56.4, 11275.0], [56.5, 11275.0], [56.6, 11276.0], [56.7, 11276.0], [56.8, 11277.0], [56.9, 11279.0], [57.0, 11280.0], [57.1, 11281.0], [57.2, 11281.0], [57.3, 11284.0], [57.4, 11285.0], [57.5, 11286.0], [57.6, 11287.0], [57.7, 11288.0], [57.8, 11289.0], [57.9, 11289.0], [58.0, 11289.0], [58.1, 11291.0], [58.2, 11297.0], [58.3, 11297.0], [58.4, 11298.0], [58.5, 11299.0], [58.6, 11302.0], [58.7, 11304.0], [58.8, 11305.0], [58.9, 11306.0], [59.0, 11307.0], [59.1, 11308.0], [59.2, 11308.0], [59.3, 11309.0], [59.4, 11309.0], [59.5, 11314.0], [59.6, 11316.0], [59.7, 11318.0], [59.8, 11318.0], [59.9, 11318.0], [60.0, 11319.0], [60.1, 11321.0], [60.2, 11321.0], [60.3, 11321.0], [60.4, 11322.0], [60.5, 11322.0], [60.6, 11323.0], [60.7, 11323.0], [60.8, 11323.0], [60.9, 11324.0], [61.0, 11324.0], [61.1, 11325.0], [61.2, 11326.0], [61.3, 11326.0], [61.4, 11327.0], [61.5, 11328.0], [61.6, 11328.0], [61.7, 11329.0], [61.8, 11329.0], [61.9, 11329.0], [62.0, 11329.0], [62.1, 11330.0], [62.2, 11330.0], [62.3, 11330.0], [62.4, 11331.0], [62.5, 11331.0], [62.6, 11331.0], [62.7, 11331.0], [62.8, 11331.0], [62.9, 11332.0], [63.0, 11332.0], [63.1, 11332.0], [63.2, 11333.0], [63.3, 11333.0], [63.4, 11334.0], [63.5, 11334.0], [63.6, 11335.0], [63.7, 11335.0], [63.8, 11335.0], [63.9, 11336.0], [64.0, 11336.0], [64.1, 11336.0], [64.2, 11337.0], [64.3, 11337.0], [64.4, 11337.0], [64.5, 11337.0], [64.6, 11337.0], [64.7, 11338.0], [64.8, 11338.0], [64.9, 11338.0], [65.0, 11338.0], [65.1, 11338.0], [65.2, 11338.0], [65.3, 11338.0], [65.4, 11339.0], [65.5, 11340.0], [65.6, 11340.0], [65.7, 11341.0], [65.8, 11342.0], [65.9, 11342.0], [66.0, 11342.0], [66.1, 11342.0], [66.2, 11342.0], [66.3, 11343.0], [66.4, 11343.0], [66.5, 11343.0], [66.6, 11343.0], [66.7, 11344.0], [66.8, 11344.0], [66.9, 11344.0], [67.0, 11345.0], [67.1, 11345.0], [67.2, 11346.0], [67.3, 11346.0], [67.4, 11346.0], [67.5, 11347.0], [67.6, 11347.0], [67.7, 11348.0], [67.8, 11348.0], [67.9, 11349.0], [68.0, 11349.0], [68.1, 11349.0], [68.2, 11349.0], [68.3, 11349.0], [68.4, 11350.0], [68.5, 11350.0], [68.6, 11350.0], [68.7, 11350.0], [68.8, 11350.0], [68.9, 11351.0], [69.0, 11351.0], [69.1, 11351.0], [69.2, 11351.0], [69.3, 11351.0], [69.4, 11351.0], [69.5, 11351.0], [69.6, 11351.0], [69.7, 11352.0], [69.8, 11353.0], [69.9, 11353.0], [70.0, 11353.0], [70.1, 11353.0], [70.2, 11353.0], [70.3, 11353.0], [70.4, 11354.0], [70.5, 11354.0], [70.6, 11354.0], [70.7, 11354.0], [70.8, 11355.0], [70.9, 11355.0], [71.0, 11355.0], [71.1, 11355.0], [71.2, 11355.0], [71.3, 11356.0], [71.4, 11356.0], [71.5, 11356.0], [71.6, 11357.0], [71.7, 11357.0], [71.8, 11357.0], [71.9, 11358.0], [72.0, 11358.0], [72.1, 11358.0], [72.2, 11358.0], [72.3, 11359.0], [72.4, 11359.0], [72.5, 11359.0], [72.6, 11359.0], [72.7, 11360.0], [72.8, 11360.0], [72.9, 11361.0], [73.0, 11361.0], [73.1, 11361.0], [73.2, 11361.0], [73.3, 11361.0], [73.4, 11362.0], [73.5, 11362.0], [73.6, 11362.0], [73.7, 11362.0], [73.8, 11362.0], [73.9, 11363.0], [74.0, 11363.0], [74.1, 11363.0], [74.2, 11363.0], [74.3, 11364.0], [74.4, 11365.0], [74.5, 11365.0], [74.6, 11366.0], [74.7, 11367.0], [74.8, 11367.0], [74.9, 11368.0], [75.0, 11368.0], [75.1, 11368.0], [75.2, 11368.0], [75.3, 11369.0], [75.4, 11369.0], [75.5, 11369.0], [75.6, 11369.0], [75.7, 11370.0], [75.8, 11370.0], [75.9, 11370.0], [76.0, 11370.0], [76.1, 11371.0], [76.2, 11371.0], [76.3, 11371.0], [76.4, 11371.0], [76.5, 11372.0], [76.6, 11372.0], [76.7, 11372.0], [76.8, 11372.0], [76.9, 11373.0], [77.0, 11373.0], [77.1, 11373.0], [77.2, 11374.0], [77.3, 11374.0], [77.4, 11375.0], [77.5, 11375.0], [77.6, 11375.0], [77.7, 11376.0], [77.8, 11377.0], [77.9, 11377.0], [78.0, 11377.0], [78.1, 11378.0], [78.2, 11378.0], [78.3, 11378.0], [78.4, 11378.0], [78.5, 11379.0], [78.6, 11379.0], [78.7, 11379.0], [78.8, 11379.0], [78.9, 11379.0], [79.0, 11379.0], [79.1, 11379.0], [79.2, 11379.0], [79.3, 11379.0], [79.4, 11380.0], [79.5, 11380.0], [79.6, 11380.0], [79.7, 11380.0], [79.8, 11381.0], [79.9, 11382.0], [80.0, 11383.0], [80.1, 11383.0], [80.2, 11384.0], [80.3, 11385.0], [80.4, 11386.0], [80.5, 11386.0], [80.6, 11386.0], [80.7, 11386.0], [80.8, 11386.0], [80.9, 11386.0], [81.0, 11386.0], [81.1, 11387.0], [81.2, 11387.0], [81.3, 11388.0], [81.4, 11388.0], [81.5, 11389.0], [81.6, 11390.0], [81.7, 11391.0], [81.8, 11391.0], [81.9, 11391.0], [82.0, 11392.0], [82.1, 11392.0], [82.2, 11392.0], [82.3, 11393.0], [82.4, 11393.0], [82.5, 11393.0], [82.6, 11394.0], [82.7, 11394.0], [82.8, 11395.0], [82.9, 11395.0], [83.0, 11396.0], [83.1, 11397.0], [83.2, 11398.0], [83.3, 11398.0], [83.4, 11399.0], [83.5, 11400.0], [83.6, 11400.0], [83.7, 11402.0], [83.8, 11405.0], [83.9, 11405.0], [84.0, 11407.0], [84.1, 11407.0], [84.2, 11408.0], [84.3, 11408.0], [84.4, 11409.0], [84.5, 11410.0], [84.6, 11411.0], [84.7, 11411.0], [84.8, 11412.0], [84.9, 11412.0], [85.0, 11412.0], [85.1, 11415.0], [85.2, 11415.0], [85.3, 11416.0], [85.4, 11417.0], [85.5, 11417.0], [85.6, 11420.0], [85.7, 11420.0], [85.8, 11421.0], [85.9, 11423.0], [86.0, 11423.0], [86.1, 11424.0], [86.2, 11426.0], [86.3, 11427.0], [86.4, 11429.0], [86.5, 11430.0], [86.6, 11430.0], [86.7, 11430.0], [86.8, 11430.0], [86.9, 11430.0], [87.0, 11431.0], [87.1, 11431.0], [87.2, 11432.0], [87.3, 11433.0], [87.4, 11435.0], [87.5, 11435.0], [87.6, 11437.0], [87.7, 11438.0], [87.8, 11438.0], [87.9, 11439.0], [88.0, 11441.0], [88.1, 11442.0], [88.2, 11442.0], [88.3, 11442.0], [88.4, 11443.0], [88.5, 11443.0], [88.6, 11444.0], [88.7, 11446.0], [88.8, 11446.0], [88.9, 11448.0], [89.0, 11449.0], [89.1, 11451.0], [89.2, 11451.0], [89.3, 11453.0], [89.4, 11455.0], [89.5, 11455.0], [89.6, 11456.0], [89.7, 11457.0], [89.8, 11461.0], [89.9, 11467.0], [90.0, 11477.0], [90.1, 12022.0], [90.2, 12036.0], [90.3, 12041.0], [90.4, 12041.0], [90.5, 12044.0], [90.6, 12045.0], [90.7, 12051.0], [90.8, 12052.0], [90.9, 12059.0], [91.0, 12059.0], [91.1, 12060.0], [91.2, 12063.0], [91.3, 12064.0], [91.4, 12064.0], [91.5, 12064.0], [91.6, 12065.0], [91.7, 12067.0], [91.8, 12068.0], [91.9, 12068.0], [92.0, 12070.0], [92.1, 12071.0], [92.2, 12073.0], [92.3, 12073.0], [92.4, 12077.0], [92.5, 12080.0], [92.6, 12081.0], [92.7, 12087.0], [92.8, 12087.0], [92.9, 12088.0], [93.0, 12089.0], [93.1, 12091.0], [93.2, 12091.0], [93.3, 12092.0], [93.4, 12092.0], [93.5, 12092.0], [93.6, 12093.0], [93.7, 12097.0], [93.8, 12099.0], [93.9, 12099.0], [94.0, 12099.0], [94.1, 12100.0], [94.2, 12102.0], [94.3, 12103.0], [94.4, 12104.0], [94.5, 12104.0], [94.6, 12104.0], [94.7, 12105.0], [94.8, 12105.0], [94.9, 12106.0], [95.0, 12107.0], [95.1, 12114.0], [95.2, 12114.0], [95.3, 12123.0], [95.4, 12128.0], [95.5, 12135.0], [95.6, 12135.0], [95.7, 12152.0], [95.8, 12163.0], [95.9, 16960.0], [96.0, 16968.0], [96.1, 16969.0], [96.2, 16971.0], [96.3, 16972.0], [96.4, 16974.0], [96.5, 16975.0], [96.6, 16975.0], [96.7, 16975.0], [96.8, 16976.0], [96.9, 16977.0], [97.0, 16983.0], [97.1, 16986.0], [97.2, 16988.0], [97.3, 16988.0], [97.4, 16988.0], [97.5, 16989.0], [97.6, 16991.0], [97.7, 16993.0], [97.8, 16993.0], [97.9, 16994.0], [98.0, 16995.0], [98.1, 16996.0], [98.2, 16997.0], [98.3, 16997.0], [98.4, 16998.0], [98.5, 16999.0], [98.6, 16999.0], [98.7, 17000.0], [98.8, 17001.0], [98.9, 17005.0], [99.0, 17006.0], [99.1, 17007.0], [99.2, 17008.0], [99.3, 17012.0], [99.4, 17016.0], [99.5, 17026.0], [99.6, 17037.0], [99.7, 17040.0], [99.8, 17071.0], [99.9, 17192.0]], "isOverall": false, "label": "igo", "isController": false}, {"data": [[0.0, 4188.0], [0.1, 4194.0], [0.2, 4203.0], [0.3, 4203.0], [0.4, 4203.0], [0.5, 4203.0], [0.6, 4203.0], [0.7, 4205.0], [0.8, 4206.0], [0.9, 4206.0], [1.0, 4206.0], [1.1, 4206.0], [1.2, 4206.0], [1.3, 4207.0], [1.4, 4207.0], [1.5, 4208.0], [1.6, 4209.0], [1.7, 4211.0], [1.8, 4211.0], [1.9, 4213.0], [2.0, 4214.0], [2.1, 4214.0], [2.2, 4216.0], [2.3, 4217.0], [2.4, 4217.0], [2.5, 4217.0], [2.6, 4218.0], [2.7, 4218.0], [2.8, 4220.0], [2.9, 4220.0], [3.0, 4221.0], [3.1, 4222.0], [3.2, 4222.0], [3.3, 4223.0], [3.4, 4223.0], [3.5, 4224.0], [3.6, 4224.0], [3.7, 4225.0], [3.8, 4226.0], [3.9, 4229.0], [4.0, 4229.0], [4.1, 4231.0], [4.2, 4238.0], [4.3, 4240.0], [4.4, 5130.0], [4.5, 5131.0], [4.6, 5133.0], [4.7, 5134.0], [4.8, 5135.0], [4.9, 5138.0], [5.0, 5139.0], [5.1, 5141.0], [5.2, 5141.0], [5.3, 5141.0], [5.4, 5142.0], [5.5, 5144.0], [5.6, 5145.0], [5.7, 5146.0], [5.8, 5146.0], [5.9, 5146.0], [6.0, 5146.0], [6.1, 5147.0], [6.2, 5147.0], [6.3, 5147.0], [6.4, 5147.0], [6.5, 5147.0], [6.6, 5148.0], [6.7, 5148.0], [6.8, 5148.0], [6.9, 5149.0], [7.0, 5149.0], [7.1, 5150.0], [7.2, 5151.0], [7.3, 5152.0], [7.4, 5152.0], [7.5, 5152.0], [7.6, 5153.0], [7.7, 5154.0], [7.8, 5154.0], [7.9, 5154.0], [8.0, 5154.0], [8.1, 5155.0], [8.2, 5155.0], [8.3, 5156.0], [8.4, 5156.0], [8.5, 5156.0], [8.6, 5156.0], [8.7, 5156.0], [8.8, 5157.0], [8.9, 5157.0], [9.0, 5157.0], [9.1, 5157.0], [9.2, 5157.0], [9.3, 5157.0], [9.4, 5158.0], [9.5, 5158.0], [9.6, 5158.0], [9.7, 5158.0], [9.8, 5158.0], [9.9, 5158.0], [10.0, 5159.0], [10.1, 5159.0], [10.2, 5159.0], [10.3, 5160.0], [10.4, 5160.0], [10.5, 5161.0], [10.6, 5161.0], [10.7, 5161.0], [10.8, 5161.0], [10.9, 5161.0], [11.0, 5162.0], [11.1, 5162.0], [11.2, 5162.0], [11.3, 5162.0], [11.4, 5163.0], [11.5, 5163.0], [11.6, 5163.0], [11.7, 5164.0], [11.8, 5164.0], [11.9, 5164.0], [12.0, 5164.0], [12.1, 5164.0], [12.2, 5164.0], [12.3, 5164.0], [12.4, 5164.0], [12.5, 5165.0], [12.6, 5165.0], [12.7, 5165.0], [12.8, 5166.0], [12.9, 5166.0], [13.0, 5166.0], [13.1, 5167.0], [13.2, 5167.0], [13.3, 5167.0], [13.4, 5167.0], [13.5, 5167.0], [13.6, 5167.0], [13.7, 5167.0], [13.8, 5168.0], [13.9, 5168.0], [14.0, 5168.0], [14.1, 5168.0], [14.2, 5168.0], [14.3, 5168.0], [14.4, 5168.0], [14.5, 5169.0], [14.6, 5169.0], [14.7, 5169.0], [14.8, 5169.0], [14.9, 5170.0], [15.0, 5170.0], [15.1, 5170.0], [15.2, 5171.0], [15.3, 5171.0], [15.4, 5171.0], [15.5, 5172.0], [15.6, 5172.0], [15.7, 5172.0], [15.8, 5172.0], [15.9, 5173.0], [16.0, 5173.0], [16.1, 5173.0], [16.2, 5173.0], [16.3, 5173.0], [16.4, 5173.0], [16.5, 5173.0], [16.6, 5174.0], [16.7, 5174.0], [16.8, 5175.0], [16.9, 5175.0], [17.0, 5175.0], [17.1, 5175.0], [17.2, 5176.0], [17.3, 5177.0], [17.4, 5178.0], [17.5, 5178.0], [17.6, 5178.0], [17.7, 5178.0], [17.8, 5179.0], [17.9, 5179.0], [18.0, 5179.0], [18.1, 5179.0], [18.2, 5179.0], [18.3, 5179.0], [18.4, 5179.0], [18.5, 5179.0], [18.6, 5180.0], [18.7, 5180.0], [18.8, 5181.0], [18.9, 5181.0], [19.0, 5182.0], [19.1, 5182.0], [19.2, 5182.0], [19.3, 5182.0], [19.4, 5183.0], [19.5, 5184.0], [19.6, 5184.0], [19.7, 5185.0], [19.8, 5185.0], [19.9, 5186.0], [20.0, 5186.0], [20.1, 5186.0], [20.2, 5187.0], [20.3, 5188.0], [20.4, 5188.0], [20.5, 5189.0], [20.6, 5189.0], [20.7, 5189.0], [20.8, 5189.0], [20.9, 5190.0], [21.0, 5190.0], [21.1, 5192.0], [21.2, 5192.0], [21.3, 5193.0], [21.4, 5193.0], [21.5, 5194.0], [21.6, 5195.0], [21.7, 5197.0], [21.8, 5197.0], [21.9, 5199.0], [22.0, 5199.0], [22.1, 5199.0], [22.2, 5203.0], [22.3, 5440.0], [22.4, 5443.0], [22.5, 5445.0], [22.6, 5453.0], [22.7, 5453.0], [22.8, 5458.0], [22.9, 5460.0], [23.0, 5464.0], [23.1, 5465.0], [23.2, 5467.0], [23.3, 5468.0], [23.4, 5468.0], [23.5, 5470.0], [23.6, 5471.0], [23.7, 5471.0], [23.8, 5472.0], [23.9, 5472.0], [24.0, 5473.0], [24.1, 5473.0], [24.2, 5474.0], [24.3, 5474.0], [24.4, 5476.0], [24.5, 5476.0], [24.6, 5476.0], [24.7, 5478.0], [24.8, 5478.0], [24.9, 5478.0], [25.0, 5479.0], [25.1, 5480.0], [25.2, 5480.0], [25.3, 5481.0], [25.4, 5481.0], [25.5, 5481.0], [25.6, 5482.0], [25.7, 5482.0], [25.8, 5483.0], [25.9, 5483.0], [26.0, 5483.0], [26.1, 5486.0], [26.2, 5487.0], [26.3, 5487.0], [26.4, 5488.0], [26.5, 5488.0], [26.6, 5490.0], [26.7, 5490.0], [26.8, 5490.0], [26.9, 5490.0], [27.0, 5490.0], [27.1, 5491.0], [27.2, 5491.0], [27.3, 5492.0], [27.4, 5492.0], [27.5, 5493.0], [27.6, 5494.0], [27.7, 5495.0], [27.8, 5497.0], [27.9, 5497.0], [28.0, 5498.0], [28.1, 5498.0], [28.2, 5499.0], [28.3, 5499.0], [28.4, 5501.0], [28.5, 5502.0], [28.6, 5502.0], [28.7, 5502.0], [28.8, 5502.0], [28.9, 5505.0], [29.0, 5505.0], [29.1, 5506.0], [29.2, 5508.0], [29.3, 5509.0], [29.4, 5510.0], [29.5, 5511.0], [29.6, 5511.0], [29.7, 5511.0], [29.8, 5512.0], [29.9, 5513.0], [30.0, 5514.0], [30.1, 5515.0], [30.2, 5515.0], [30.3, 5515.0], [30.4, 5515.0], [30.5, 5517.0], [30.6, 5517.0], [30.7, 5518.0], [30.8, 5518.0], [30.9, 5519.0], [31.0, 5520.0], [31.1, 5520.0], [31.2, 5521.0], [31.3, 5521.0], [31.4, 5522.0], [31.5, 5522.0], [31.6, 5522.0], [31.7, 5522.0], [31.8, 5523.0], [31.9, 5526.0], [32.0, 5526.0], [32.1, 5527.0], [32.2, 5528.0], [32.3, 5528.0], [32.4, 5530.0], [32.5, 5530.0], [32.6, 5532.0], [32.7, 5532.0], [32.8, 5532.0], [32.9, 5534.0], [33.0, 5535.0], [33.1, 5535.0], [33.2, 5536.0], [33.3, 5537.0], [33.4, 5537.0], [33.5, 5540.0], [33.6, 5546.0], [33.7, 5546.0], [33.8, 5554.0], [33.9, 5569.0], [34.0, 5588.0], [34.1, 5590.0], [34.2, 5620.0], [34.3, 5627.0], [34.4, 5631.0], [34.5, 5643.0], [34.6, 5647.0], [34.7, 5649.0], [34.8, 5652.0], [34.9, 5670.0], [35.0, 5673.0], [35.1, 5681.0], [35.2, 5682.0], [35.3, 5685.0], [35.4, 5727.0], [35.5, 5750.0], [35.6, 5792.0], [35.7, 7667.0], [35.8, 7671.0], [35.9, 7674.0], [36.0, 7677.0], [36.1, 7678.0], [36.2, 7678.0], [36.3, 7681.0], [36.4, 7681.0], [36.5, 7683.0], [36.6, 7685.0], [36.7, 7685.0], [36.8, 7687.0], [36.9, 7687.0], [37.0, 7687.0], [37.1, 7687.0], [37.2, 7687.0], [37.3, 7687.0], [37.4, 7687.0], [37.5, 7687.0], [37.6, 7688.0], [37.7, 7688.0], [37.8, 7688.0], [37.9, 7689.0], [38.0, 7689.0], [38.1, 7689.0], [38.2, 7690.0], [38.3, 7691.0], [38.4, 7691.0], [38.5, 7691.0], [38.6, 7691.0], [38.7, 7691.0], [38.8, 7691.0], [38.9, 7691.0], [39.0, 7692.0], [39.1, 7692.0], [39.2, 7693.0], [39.3, 7693.0], [39.4, 7693.0], [39.5, 7693.0], [39.6, 7693.0], [39.7, 7693.0], [39.8, 7694.0], [39.9, 7694.0], [40.0, 7694.0], [40.1, 7694.0], [40.2, 7695.0], [40.3, 7695.0], [40.4, 7695.0], [40.5, 7695.0], [40.6, 7695.0], [40.7, 7696.0], [40.8, 7696.0], [40.9, 7696.0], [41.0, 7697.0], [41.1, 7697.0], [41.2, 7697.0], [41.3, 7697.0], [41.4, 7697.0], [41.5, 7698.0], [41.6, 7698.0], [41.7, 7698.0], [41.8, 7698.0], [41.9, 7698.0], [42.0, 7698.0], [42.1, 7698.0], [42.2, 7698.0], [42.3, 7698.0], [42.4, 7699.0], [42.5, 7699.0], [42.6, 7699.0], [42.7, 7700.0], [42.8, 7700.0], [42.9, 7700.0], [43.0, 7700.0], [43.1, 7700.0], [43.2, 7700.0], [43.3, 7700.0], [43.4, 7700.0], [43.5, 7701.0], [43.6, 7701.0], [43.7, 7701.0], [43.8, 7702.0], [43.9, 7702.0], [44.0, 7702.0], [44.1, 7702.0], [44.2, 7702.0], [44.3, 7702.0], [44.4, 7702.0], [44.5, 7703.0], [44.6, 7703.0], [44.7, 7704.0], [44.8, 7704.0], [44.9, 7704.0], [45.0, 7705.0], [45.1, 7705.0], [45.2, 7705.0], [45.3, 7705.0], [45.4, 7705.0], [45.5, 7705.0], [45.6, 7705.0], [45.7, 7705.0], [45.8, 7706.0], [45.9, 7706.0], [46.0, 7706.0], [46.1, 7706.0], [46.2, 7707.0], [46.3, 7707.0], [46.4, 7707.0], [46.5, 7707.0], [46.6, 7708.0], [46.7, 7708.0], [46.8, 7708.0], [46.9, 7708.0], [47.0, 7708.0], [47.1, 7708.0], [47.2, 7708.0], [47.3, 7708.0], [47.4, 7708.0], [47.5, 7708.0], [47.6, 7708.0], [47.7, 7708.0], [47.8, 7708.0], [47.9, 7708.0], [48.0, 7708.0], [48.1, 7709.0], [48.2, 7709.0], [48.3, 7709.0], [48.4, 7709.0], [48.5, 7709.0], [48.6, 7710.0], [48.7, 7710.0], [48.8, 7710.0], [48.9, 7710.0], [49.0, 7710.0], [49.1, 7710.0], [49.2, 7710.0], [49.3, 7710.0], [49.4, 7710.0], [49.5, 7711.0], [49.6, 7711.0], [49.7, 7711.0], [49.8, 7711.0], [49.9, 7711.0], [50.0, 7711.0], [50.1, 7711.0], [50.2, 7711.0], [50.3, 7711.0], [50.4, 7712.0], [50.5, 7712.0], [50.6, 7712.0], [50.7, 7712.0], [50.8, 7712.0], [50.9, 7712.0], [51.0, 7712.0], [51.1, 7712.0], [51.2, 7712.0], [51.3, 7713.0], [51.4, 7713.0], [51.5, 7713.0], [51.6, 7713.0], [51.7, 7713.0], [51.8, 7714.0], [51.9, 7714.0], [52.0, 7714.0], [52.1, 7714.0], [52.2, 7714.0], [52.3, 7714.0], [52.4, 7714.0], [52.5, 7714.0], [52.6, 7715.0], [52.7, 7715.0], [52.8, 7716.0], [52.9, 7716.0], [53.0, 7716.0], [53.1, 7716.0], [53.2, 7716.0], [53.3, 7717.0], [53.4, 7717.0], [53.5, 7717.0], [53.6, 7717.0], [53.7, 7717.0], [53.8, 7717.0], [53.9, 7717.0], [54.0, 7717.0], [54.1, 7717.0], [54.2, 7717.0], [54.3, 7717.0], [54.4, 7718.0], [54.5, 7718.0], [54.6, 7718.0], [54.7, 7718.0], [54.8, 7718.0], [54.9, 7719.0], [55.0, 7719.0], [55.1, 7719.0], [55.2, 7719.0], [55.3, 7719.0], [55.4, 7720.0], [55.5, 7720.0], [55.6, 7720.0], [55.7, 7720.0], [55.8, 7721.0], [55.9, 7722.0], [56.0, 7722.0], [56.1, 7722.0], [56.2, 7722.0], [56.3, 7722.0], [56.4, 7723.0], [56.5, 7723.0], [56.6, 7723.0], [56.7, 7723.0], [56.8, 7723.0], [56.9, 7724.0], [57.0, 7725.0], [57.1, 7726.0], [57.2, 7726.0], [57.3, 7726.0], [57.4, 7727.0], [57.5, 7727.0], [57.6, 7727.0], [57.7, 7729.0], [57.8, 7730.0], [57.9, 7730.0], [58.0, 7730.0], [58.1, 7730.0], [58.2, 7731.0], [58.3, 7732.0], [58.4, 7735.0], [58.5, 7736.0], [58.6, 7736.0], [58.7, 7737.0], [58.8, 7737.0], [58.9, 7737.0], [59.0, 7738.0], [59.1, 7739.0], [59.2, 7739.0], [59.3, 7742.0], [59.4, 7743.0], [59.5, 7743.0], [59.6, 7744.0], [59.7, 7749.0], [59.8, 7753.0], [59.9, 7754.0], [60.0, 7756.0], [60.1, 7757.0], [60.2, 7763.0], [60.3, 7764.0], [60.4, 11227.0], [60.5, 11235.0], [60.6, 11238.0], [60.7, 11239.0], [60.8, 11261.0], [60.9, 11285.0], [61.0, 11288.0], [61.1, 11288.0], [61.2, 11292.0], [61.3, 11294.0], [61.4, 11297.0], [61.5, 11303.0], [61.6, 11305.0], [61.7, 11305.0], [61.8, 11308.0], [61.9, 11311.0], [62.0, 11314.0], [62.1, 11316.0], [62.2, 11316.0], [62.3, 11318.0], [62.4, 11319.0], [62.5, 11321.0], [62.6, 11321.0], [62.7, 11322.0], [62.8, 11322.0], [62.9, 11324.0], [63.0, 11325.0], [63.1, 11325.0], [63.2, 11325.0], [63.3, 11326.0], [63.4, 11326.0], [63.5, 11327.0], [63.6, 11328.0], [63.7, 11328.0], [63.8, 11328.0], [63.9, 11329.0], [64.0, 11330.0], [64.1, 11330.0], [64.2, 11330.0], [64.3, 11331.0], [64.4, 11331.0], [64.5, 11331.0], [64.6, 11331.0], [64.7, 11332.0], [64.8, 11332.0], [64.9, 11333.0], [65.0, 11333.0], [65.1, 11333.0], [65.2, 11333.0], [65.3, 11333.0], [65.4, 11334.0], [65.5, 11335.0], [65.6, 11336.0], [65.7, 11336.0], [65.8, 11336.0], [65.9, 11337.0], [66.0, 11337.0], [66.1, 11337.0], [66.2, 11338.0], [66.3, 11338.0], [66.4, 11338.0], [66.5, 11338.0], [66.6, 11339.0], [66.7, 11339.0], [66.8, 11339.0], [66.9, 11340.0], [67.0, 11341.0], [67.1, 11342.0], [67.2, 11342.0], [67.3, 11343.0], [67.4, 11343.0], [67.5, 11344.0], [67.6, 11344.0], [67.7, 11345.0], [67.8, 11345.0], [67.9, 11346.0], [68.0, 11346.0], [68.1, 11347.0], [68.2, 11348.0], [68.3, 11348.0], [68.4, 11349.0], [68.5, 11349.0], [68.6, 11349.0], [68.7, 11350.0], [68.8, 11351.0], [68.9, 11351.0], [69.0, 11351.0], [69.1, 11351.0], [69.2, 11352.0], [69.3, 11352.0], [69.4, 11352.0], [69.5, 11353.0], [69.6, 11354.0], [69.7, 11354.0], [69.8, 11354.0], [69.9, 11354.0], [70.0, 11354.0], [70.1, 11355.0], [70.2, 11355.0], [70.3, 11355.0], [70.4, 11356.0], [70.5, 11356.0], [70.6, 11356.0], [70.7, 11356.0], [70.8, 11357.0], [70.9, 11357.0], [71.0, 11357.0], [71.1, 11357.0], [71.2, 11358.0], [71.3, 11358.0], [71.4, 11358.0], [71.5, 11359.0], [71.6, 11359.0], [71.7, 11359.0], [71.8, 11360.0], [71.9, 11360.0], [72.0, 11360.0], [72.1, 11360.0], [72.2, 11361.0], [72.3, 11361.0], [72.4, 11361.0], [72.5, 11361.0], [72.6, 11361.0], [72.7, 11361.0], [72.8, 11362.0], [72.9, 11363.0], [73.0, 11363.0], [73.1, 11364.0], [73.2, 11364.0], [73.3, 11364.0], [73.4, 11364.0], [73.5, 11365.0], [73.6, 11366.0], [73.7, 11367.0], [73.8, 11367.0], [73.9, 11368.0], [74.0, 11368.0], [74.1, 11369.0], [74.2, 11369.0], [74.3, 11369.0], [74.4, 11370.0], [74.5, 11370.0], [74.6, 11370.0], [74.7, 11370.0], [74.8, 11370.0], [74.9, 11371.0], [75.0, 11371.0], [75.1, 11371.0], [75.2, 11372.0], [75.3, 11372.0], [75.4, 11372.0], [75.5, 11373.0], [75.6, 11373.0], [75.7, 11374.0], [75.8, 11374.0], [75.9, 11375.0], [76.0, 11376.0], [76.1, 11377.0], [76.2, 11377.0], [76.3, 11377.0], [76.4, 11377.0], [76.5, 11377.0], [76.6, 11378.0], [76.7, 11378.0], [76.8, 11378.0], [76.9, 11379.0], [77.0, 11379.0], [77.1, 11379.0], [77.2, 11379.0], [77.3, 11379.0], [77.4, 11380.0], [77.5, 11380.0], [77.6, 11380.0], [77.7, 11380.0], [77.8, 11381.0], [77.9, 11381.0], [78.0, 11381.0], [78.1, 11382.0], [78.2, 11383.0], [78.3, 11383.0], [78.4, 11383.0], [78.5, 11384.0], [78.6, 11385.0], [78.7, 11385.0], [78.8, 11385.0], [78.9, 11385.0], [79.0, 11385.0], [79.1, 11385.0], [79.2, 11385.0], [79.3, 11385.0], [79.4, 11386.0], [79.5, 11386.0], [79.6, 11387.0], [79.7, 11387.0], [79.8, 11388.0], [79.9, 11388.0], [80.0, 11389.0], [80.1, 11389.0], [80.2, 11389.0], [80.3, 11389.0], [80.4, 11391.0], [80.5, 11391.0], [80.6, 11392.0], [80.7, 11395.0], [80.8, 11395.0], [80.9, 11396.0], [81.0, 11396.0], [81.1, 11396.0], [81.2, 11397.0], [81.3, 11397.0], [81.4, 11397.0], [81.5, 11398.0], [81.6, 11399.0], [81.7, 11400.0], [81.8, 11400.0], [81.9, 11401.0], [82.0, 11401.0], [82.1, 11402.0], [82.2, 11403.0], [82.3, 11404.0], [82.4, 11405.0], [82.5, 11406.0], [82.6, 11407.0], [82.7, 11407.0], [82.8, 11408.0], [82.9, 11408.0], [83.0, 11408.0], [83.1, 11416.0], [83.2, 11419.0], [83.3, 11419.0], [83.4, 11421.0], [83.5, 11432.0], [83.6, 11436.0], [83.7, 11448.0], [83.8, 11457.0], [83.9, 11463.0], [84.0, 11466.0], [84.1, 11468.0], [84.2, 11473.0], [84.3, 11475.0], [84.4, 11475.0], [84.5, 11475.0], [84.6, 11477.0], [84.7, 11479.0], [84.8, 11480.0], [84.9, 11484.0], [85.0, 11489.0], [85.1, 11492.0], [85.2, 11493.0], [85.3, 11493.0], [85.4, 11494.0], [85.5, 11495.0], [85.6, 11495.0], [85.7, 11495.0], [85.8, 11498.0], [85.9, 11498.0], [86.0, 11499.0], [86.1, 11502.0], [86.2, 11503.0], [86.3, 11503.0], [86.4, 11505.0], [86.5, 11508.0], [86.6, 11510.0], [86.7, 11514.0], [86.8, 11515.0], [86.9, 11518.0], [87.0, 11518.0], [87.1, 11530.0], [87.2, 11535.0], [87.3, 11535.0], [87.4, 11536.0], [87.5, 11540.0], [87.6, 11542.0], [87.7, 11544.0], [87.8, 11549.0], [87.9, 11554.0], [88.0, 11557.0], [88.1, 11558.0], [88.2, 11560.0], [88.3, 11560.0], [88.4, 11564.0], [88.5, 11564.0], [88.6, 11564.0], [88.7, 11565.0], [88.8, 11565.0], [88.9, 11566.0], [89.0, 11568.0], [89.1, 11569.0], [89.2, 11570.0], [89.3, 11836.0], [89.4, 11837.0], [89.5, 11838.0], [89.6, 11839.0], [89.7, 11843.0], [89.8, 11843.0], [89.9, 11844.0], [90.0, 11845.0], [90.1, 11846.0], [90.2, 11846.0], [90.3, 11846.0], [90.4, 11847.0], [90.5, 11847.0], [90.6, 11849.0], [90.7, 11850.0], [90.8, 11851.0], [90.9, 11852.0], [91.0, 11852.0], [91.1, 11853.0], [91.2, 11853.0], [91.3, 11854.0], [91.4, 11854.0], [91.5, 11854.0], [91.6, 11856.0], [91.7, 11856.0], [91.8, 11857.0], [91.9, 11857.0], [92.0, 11858.0], [92.1, 11859.0], [92.2, 11859.0], [92.3, 11859.0], [92.4, 11861.0], [92.5, 11861.0], [92.6, 11861.0], [92.7, 11863.0], [92.8, 11864.0], [92.9, 11864.0], [93.0, 11864.0], [93.1, 11864.0], [93.2, 11865.0], [93.3, 11866.0], [93.4, 11867.0], [93.5, 11867.0], [93.6, 11868.0], [93.7, 11869.0], [93.8, 11870.0], [93.9, 11870.0], [94.0, 11871.0], [94.1, 11871.0], [94.2, 11871.0], [94.3, 11871.0], [94.4, 11872.0], [94.5, 11873.0], [94.6, 11873.0], [94.7, 11874.0], [94.8, 11874.0], [94.9, 11876.0], [95.0, 11877.0], [95.1, 11878.0], [95.2, 11878.0], [95.3, 11880.0], [95.4, 11882.0], [95.5, 11884.0], [95.6, 11885.0], [95.7, 11886.0], [95.8, 11887.0], [95.9, 11887.0], [96.0, 11887.0], [96.1, 11888.0], [96.2, 11888.0], [96.3, 11890.0], [96.4, 11890.0], [96.5, 11891.0], [96.6, 11891.0], [96.7, 11893.0], [96.8, 11895.0], [96.9, 11895.0], [97.0, 11896.0], [97.1, 11897.0], [97.2, 11899.0], [97.3, 11899.0], [97.4, 11900.0], [97.5, 11900.0], [97.6, 11901.0], [97.7, 11902.0], [97.8, 11903.0], [97.9, 11903.0], [98.0, 11904.0], [98.1, 11904.0], [98.2, 11905.0], [98.3, 11906.0], [98.4, 11907.0], [98.5, 11907.0], [98.6, 11909.0], [98.7, 11909.0], [98.8, 11911.0], [98.9, 11911.0], [99.0, 11911.0], [99.1, 11914.0], [99.2, 11914.0], [99.3, 11921.0], [99.4, 11922.0], [99.5, 11923.0], [99.6, 11925.0], [99.7, 11925.0], [99.8, 11926.0], [99.9, 11929.0]], "isOverall": false, "label": "game", "isController": false}, {"data": [[0.0, 6567.0], [0.1, 6657.0], [0.2, 6661.0], [0.3, 6661.0], [0.4, 6785.0], [0.5, 6908.0], [0.6, 6924.0], [0.7, 6926.0], [0.8, 6968.0], [0.9, 6969.0], [1.0, 6981.0], [1.1, 6988.0], [1.2, 7011.0], [1.3, 7034.0], [1.4, 7034.0], [1.5, 7060.0], [1.6, 7061.0], [1.7, 7061.0], [1.8, 7062.0], [1.9, 7063.0], [2.0, 7065.0], [2.1, 7066.0], [2.2, 7082.0], [2.3, 7090.0], [2.4, 7101.0], [2.5, 7109.0], [2.6, 7144.0], [2.7, 7195.0], [2.8, 7206.0], [2.9, 7209.0], [3.0, 7213.0], [3.1, 7213.0], [3.2, 7217.0], [3.3, 7222.0], [3.4, 7231.0], [3.5, 7255.0], [3.6, 7257.0], [3.7, 7259.0], [3.8, 7261.0], [3.9, 7285.0], [4.0, 7288.0], [4.1, 7688.0], [4.2, 10150.0], [4.3, 10154.0], [4.4, 10156.0], [4.5, 10157.0], [4.6, 10160.0], [4.7, 10160.0], [4.8, 10164.0], [4.9, 10164.0], [5.0, 10168.0], [5.1, 10170.0], [5.2, 10176.0], [5.3, 10178.0], [5.4, 10184.0], [5.5, 10186.0], [5.6, 10187.0], [5.7, 10199.0], [5.8, 10201.0], [5.9, 10201.0], [6.0, 10203.0], [6.1, 10208.0], [6.2, 10209.0], [6.3, 10209.0], [6.4, 10209.0], [6.5, 10212.0], [6.6, 10213.0], [6.7, 10214.0], [6.8, 10218.0], [6.9, 10219.0], [7.0, 10219.0], [7.1, 10225.0], [7.2, 10478.0], [7.3, 10480.0], [7.4, 10487.0], [7.5, 10491.0], [7.6, 10494.0], [7.7, 10498.0], [7.8, 10498.0], [7.9, 10502.0], [8.0, 10502.0], [8.1, 10510.0], [8.2, 10525.0], [8.3, 10526.0], [8.4, 10543.0], [8.5, 10548.0], [8.6, 10549.0], [8.7, 10555.0], [8.8, 10557.0], [8.9, 10769.0], [9.0, 10770.0], [9.1, 10775.0], [9.2, 10779.0], [9.3, 10781.0], [9.4, 10782.0], [9.5, 10782.0], [9.6, 10783.0], [9.7, 10786.0], [9.8, 10787.0], [9.9, 10787.0], [10.0, 10788.0], [10.1, 10792.0], [10.2, 10793.0], [10.3, 10793.0], [10.4, 10795.0], [10.5, 10796.0], [10.6, 10797.0], [10.7, 10799.0], [10.8, 10800.0], [10.9, 10800.0], [11.0, 10802.0], [11.1, 10804.0], [11.2, 10807.0], [11.3, 10807.0], [11.4, 10809.0], [11.5, 10810.0], [11.6, 10811.0], [11.7, 10811.0], [11.8, 10812.0], [11.9, 10813.0], [12.0, 10814.0], [12.1, 10814.0], [12.2, 10815.0], [12.3, 10817.0], [12.4, 10818.0], [12.5, 10819.0], [12.6, 10819.0], [12.7, 10819.0], [12.8, 10819.0], [12.9, 10820.0], [13.0, 10821.0], [13.1, 10822.0], [13.2, 10822.0], [13.3, 10822.0], [13.4, 10824.0], [13.5, 10824.0], [13.6, 10826.0], [13.7, 10827.0], [13.8, 10828.0], [13.9, 10828.0], [14.0, 10829.0], [14.1, 10829.0], [14.2, 10830.0], [14.3, 10831.0], [14.4, 10833.0], [14.5, 10844.0], [14.6, 10848.0], [14.7, 10851.0], [14.8, 10866.0], [14.9, 10867.0], [15.0, 10880.0], [15.1, 10884.0], [15.2, 10890.0], [15.3, 10902.0], [15.4, 10917.0], [15.5, 10923.0], [15.6, 10937.0], [15.7, 10998.0], [15.8, 11001.0], [15.9, 11003.0], [16.0, 11019.0], [16.1, 11019.0], [16.2, 11021.0], [16.3, 11023.0], [16.4, 11026.0], [16.5, 11028.0], [16.6, 11029.0], [16.7, 11034.0], [16.8, 11034.0], [16.9, 11040.0], [17.0, 11046.0], [17.1, 11051.0], [17.2, 11051.0], [17.3, 11068.0], [17.4, 11075.0], [17.5, 11127.0], [17.6, 11128.0], [17.7, 11135.0], [17.8, 11137.0], [17.9, 11139.0], [18.0, 11140.0], [18.1, 11140.0], [18.2, 11142.0], [18.3, 11142.0], [18.4, 11143.0], [18.5, 11146.0], [18.6, 11147.0], [18.7, 11147.0], [18.8, 11149.0], [18.9, 11151.0], [19.0, 11151.0], [19.1, 11152.0], [19.2, 11153.0], [19.3, 11154.0], [19.4, 11154.0], [19.5, 11156.0], [19.6, 11157.0], [19.7, 11158.0], [19.8, 11169.0], [19.9, 11171.0], [20.0, 11174.0], [20.1, 11178.0], [20.2, 11180.0], [20.3, 11187.0], [20.4, 11187.0], [20.5, 11188.0], [20.6, 11200.0], [20.7, 11215.0], [20.8, 11235.0], [20.9, 11237.0], [21.0, 11243.0], [21.1, 11271.0], [21.2, 11292.0], [21.3, 11305.0], [21.4, 11336.0], [21.5, 11337.0], [21.6, 11351.0], [21.7, 11353.0], [21.8, 11357.0], [21.9, 11357.0], [22.0, 11369.0], [22.1, 11378.0], [22.2, 11391.0], [22.3, 11401.0], [22.4, 11410.0], [22.5, 11418.0], [22.6, 11425.0], [22.7, 11428.0], [22.8, 11429.0], [22.9, 11439.0], [23.0, 11458.0], [23.1, 11467.0], [23.2, 11469.0], [23.3, 11476.0], [23.4, 11482.0], [23.5, 11488.0], [23.6, 11518.0], [23.7, 11527.0], [23.8, 11530.0], [23.9, 11555.0], [24.0, 11634.0], [24.1, 11668.0], [24.2, 11672.0], [24.3, 11680.0], [24.4, 11683.0], [24.5, 11687.0], [24.6, 11688.0], [24.7, 11692.0], [24.8, 11693.0], [24.9, 11697.0], [25.0, 11707.0], [25.1, 11708.0], [25.2, 11712.0], [25.3, 11719.0], [25.4, 11721.0], [25.5, 11722.0], [25.6, 11724.0], [25.7, 11828.0], [25.8, 12194.0], [25.9, 12195.0], [26.0, 12198.0], [26.1, 12203.0], [26.2, 12206.0], [26.3, 12208.0], [26.4, 12218.0], [26.5, 12222.0], [26.6, 12223.0], [26.7, 12224.0], [26.8, 12228.0], [26.9, 12231.0], [27.0, 12231.0], [27.1, 12231.0], [27.2, 12232.0], [27.3, 12236.0], [27.4, 12238.0], [27.5, 12246.0], [27.6, 12247.0], [27.7, 12261.0], [27.8, 12262.0], [27.9, 12268.0], [28.0, 12283.0], [28.1, 12291.0], [28.2, 12292.0], [28.3, 12325.0], [28.4, 12384.0], [28.5, 12402.0], [28.6, 12418.0], [28.7, 12472.0], [28.8, 12475.0], [28.9, 12487.0], [29.0, 12488.0], [29.1, 12572.0], [29.2, 12577.0], [29.3, 12580.0], [29.4, 12583.0], [29.5, 12585.0], [29.6, 12585.0], [29.7, 12587.0], [29.8, 12590.0], [29.9, 12590.0], [30.0, 12592.0], [30.1, 12592.0], [30.2, 12593.0], [30.3, 12594.0], [30.4, 12596.0], [30.5, 12596.0], [30.6, 12597.0], [30.7, 12599.0], [30.8, 12599.0], [30.9, 12601.0], [31.0, 12601.0], [31.1, 12602.0], [31.2, 12604.0], [31.3, 12604.0], [31.4, 12605.0], [31.5, 12605.0], [31.6, 12605.0], [31.7, 12606.0], [31.8, 12606.0], [31.9, 12606.0], [32.0, 12606.0], [32.1, 12607.0], [32.2, 12607.0], [32.3, 12607.0], [32.4, 12608.0], [32.5, 12608.0], [32.6, 12609.0], [32.7, 12609.0], [32.8, 12609.0], [32.9, 12609.0], [33.0, 12610.0], [33.1, 12610.0], [33.2, 12610.0], [33.3, 12610.0], [33.4, 12610.0], [33.5, 12610.0], [33.6, 12610.0], [33.7, 12611.0], [33.8, 12611.0], [33.9, 12612.0], [34.0, 12612.0], [34.1, 12612.0], [34.2, 12612.0], [34.3, 12613.0], [34.4, 12613.0], [34.5, 12614.0], [34.6, 12615.0], [34.7, 12616.0], [34.8, 12616.0], [34.9, 12616.0], [35.0, 12616.0], [35.1, 12617.0], [35.2, 12617.0], [35.3, 12617.0], [35.4, 12617.0], [35.5, 12618.0], [35.6, 12618.0], [35.7, 12618.0], [35.8, 12618.0], [35.9, 12618.0], [36.0, 12619.0], [36.1, 12619.0], [36.2, 12620.0], [36.3, 12620.0], [36.4, 12621.0], [36.5, 12621.0], [36.6, 12622.0], [36.7, 12622.0], [36.8, 12622.0], [36.9, 12622.0], [37.0, 12622.0], [37.1, 12623.0], [37.2, 12623.0], [37.3, 12623.0], [37.4, 12623.0], [37.5, 12625.0], [37.6, 12625.0], [37.7, 12625.0], [37.8, 12625.0], [37.9, 12626.0], [38.0, 12626.0], [38.1, 12626.0], [38.2, 12626.0], [38.3, 12628.0], [38.4, 12628.0], [38.5, 12628.0], [38.6, 12628.0], [38.7, 12629.0], [38.8, 12629.0], [38.9, 12629.0], [39.0, 12629.0], [39.1, 12630.0], [39.2, 12630.0], [39.3, 12630.0], [39.4, 12631.0], [39.5, 12631.0], [39.6, 12632.0], [39.7, 12632.0], [39.8, 12632.0], [39.9, 12633.0], [40.0, 12633.0], [40.1, 12633.0], [40.2, 12633.0], [40.3, 12633.0], [40.4, 12633.0], [40.5, 12634.0], [40.6, 12634.0], [40.7, 12635.0], [40.8, 12635.0], [40.9, 12635.0], [41.0, 12636.0], [41.1, 12636.0], [41.2, 12636.0], [41.3, 12637.0], [41.4, 12637.0], [41.5, 12637.0], [41.6, 12637.0], [41.7, 12637.0], [41.8, 12638.0], [41.9, 12639.0], [42.0, 12639.0], [42.1, 12639.0], [42.2, 12639.0], [42.3, 12639.0], [42.4, 12639.0], [42.5, 12641.0], [42.6, 12641.0], [42.7, 12641.0], [42.8, 12641.0], [42.9, 12641.0], [43.0, 12641.0], [43.1, 12641.0], [43.2, 12641.0], [43.3, 12642.0], [43.4, 12642.0], [43.5, 12642.0], [43.6, 12642.0], [43.7, 12643.0], [43.8, 12643.0], [43.9, 12644.0], [44.0, 12644.0], [44.1, 12645.0], [44.2, 12645.0], [44.3, 12645.0], [44.4, 12646.0], [44.5, 12646.0], [44.6, 12646.0], [44.7, 12646.0], [44.8, 12647.0], [44.9, 12648.0], [45.0, 12648.0], [45.1, 12648.0], [45.2, 12648.0], [45.3, 12648.0], [45.4, 12648.0], [45.5, 12648.0], [45.6, 12649.0], [45.7, 12649.0], [45.8, 12649.0], [45.9, 12650.0], [46.0, 12650.0], [46.1, 12650.0], [46.2, 12650.0], [46.3, 12651.0], [46.4, 12651.0], [46.5, 12651.0], [46.6, 12651.0], [46.7, 12652.0], [46.8, 12653.0], [46.9, 12653.0], [47.0, 12654.0], [47.1, 12654.0], [47.2, 12654.0], [47.3, 12654.0], [47.4, 12654.0], [47.5, 12654.0], [47.6, 12655.0], [47.7, 12655.0], [47.8, 12656.0], [47.9, 12657.0], [48.0, 12657.0], [48.1, 12657.0], [48.2, 12657.0], [48.3, 12657.0], [48.4, 12657.0], [48.5, 12658.0], [48.6, 12658.0], [48.7, 12658.0], [48.8, 12659.0], [48.9, 12659.0], [49.0, 12659.0], [49.1, 12660.0], [49.2, 12660.0], [49.3, 12660.0], [49.4, 12662.0], [49.5, 12662.0], [49.6, 12662.0], [49.7, 12662.0], [49.8, 12663.0], [49.9, 12663.0], [50.0, 12663.0], [50.1, 12663.0], [50.2, 12663.0], [50.3, 12663.0], [50.4, 12663.0], [50.5, 12664.0], [50.6, 12664.0], [50.7, 12665.0], [50.8, 12665.0], [50.9, 12666.0], [51.0, 12666.0], [51.1, 12666.0], [51.2, 12666.0], [51.3, 12666.0], [51.4, 12667.0], [51.5, 12668.0], [51.6, 12669.0], [51.7, 12669.0], [51.8, 12669.0], [51.9, 12669.0], [52.0, 12669.0], [52.1, 12670.0], [52.2, 12670.0], [52.3, 12670.0], [52.4, 12670.0], [52.5, 12670.0], [52.6, 12671.0], [52.7, 12671.0], [52.8, 12671.0], [52.9, 12671.0], [53.0, 12671.0], [53.1, 12672.0], [53.2, 12672.0], [53.3, 12672.0], [53.4, 12673.0], [53.5, 12673.0], [53.6, 12673.0], [53.7, 12674.0], [53.8, 12674.0], [53.9, 12674.0], [54.0, 12674.0], [54.1, 12674.0], [54.2, 12674.0], [54.3, 12674.0], [54.4, 12675.0], [54.5, 12675.0], [54.6, 12675.0], [54.7, 12676.0], [54.8, 12676.0], [54.9, 12676.0], [55.0, 12676.0], [55.1, 12677.0], [55.2, 12677.0], [55.3, 12678.0], [55.4, 12678.0], [55.5, 12678.0], [55.6, 12678.0], [55.7, 12679.0], [55.8, 12679.0], [55.9, 12680.0], [56.0, 12680.0], [56.1, 12680.0], [56.2, 12681.0], [56.3, 12682.0], [56.4, 12683.0], [56.5, 12683.0], [56.6, 12683.0], [56.7, 12684.0], [56.8, 12684.0], [56.9, 12684.0], [57.0, 12684.0], [57.1, 12684.0], [57.2, 12684.0], [57.3, 12685.0], [57.4, 12685.0], [57.5, 12686.0], [57.6, 12687.0], [57.7, 12687.0], [57.8, 12688.0], [57.9, 12688.0], [58.0, 12689.0], [58.1, 12689.0], [58.2, 12689.0], [58.3, 12690.0], [58.4, 12690.0], [58.5, 12691.0], [58.6, 12691.0], [58.7, 12691.0], [58.8, 12691.0], [58.9, 12691.0], [59.0, 12691.0], [59.1, 12691.0], [59.2, 12691.0], [59.3, 12692.0], [59.4, 12692.0], [59.5, 12693.0], [59.6, 12693.0], [59.7, 12693.0], [59.8, 12694.0], [59.9, 12695.0], [60.0, 12695.0], [60.1, 12695.0], [60.2, 12695.0], [60.3, 12695.0], [60.4, 12695.0], [60.5, 12695.0], [60.6, 12696.0], [60.7, 12696.0], [60.8, 12696.0], [60.9, 12696.0], [61.0, 12697.0], [61.1, 12697.0], [61.2, 12697.0], [61.3, 12697.0], [61.4, 12698.0], [61.5, 12698.0], [61.6, 12699.0], [61.7, 12699.0], [61.8, 12699.0], [61.9, 12699.0], [62.0, 12699.0], [62.1, 12699.0], [62.2, 12700.0], [62.3, 12700.0], [62.4, 12701.0], [62.5, 12701.0], [62.6, 12701.0], [62.7, 12701.0], [62.8, 12702.0], [62.9, 12702.0], [63.0, 12702.0], [63.1, 12703.0], [63.2, 12703.0], [63.3, 12703.0], [63.4, 12703.0], [63.5, 12704.0], [63.6, 12704.0], [63.7, 12705.0], [63.8, 12705.0], [63.9, 12705.0], [64.0, 12705.0], [64.1, 12706.0], [64.2, 12706.0], [64.3, 12706.0], [64.4, 12707.0], [64.5, 12707.0], [64.6, 12707.0], [64.7, 12707.0], [64.8, 12708.0], [64.9, 12708.0], [65.0, 12708.0], [65.1, 12708.0], [65.2, 12710.0], [65.3, 12710.0], [65.4, 12710.0], [65.5, 12711.0], [65.6, 12711.0], [65.7, 12711.0], [65.8, 12711.0], [65.9, 12712.0], [66.0, 12713.0], [66.1, 12713.0], [66.2, 12713.0], [66.3, 12714.0], [66.4, 12714.0], [66.5, 12714.0], [66.6, 12715.0], [66.7, 12715.0], [66.8, 12715.0], [66.9, 12715.0], [67.0, 12715.0], [67.1, 12716.0], [67.2, 12716.0], [67.3, 12716.0], [67.4, 12716.0], [67.5, 12716.0], [67.6, 12717.0], [67.7, 12717.0], [67.8, 12717.0], [67.9, 12718.0], [68.0, 12718.0], [68.1, 12718.0], [68.2, 12718.0], [68.3, 12718.0], [68.4, 12719.0], [68.5, 12719.0], [68.6, 12719.0], [68.7, 12719.0], [68.8, 12719.0], [68.9, 12719.0], [69.0, 12719.0], [69.1, 12720.0], [69.2, 12720.0], [69.3, 12721.0], [69.4, 12721.0], [69.5, 12721.0], [69.6, 12721.0], [69.7, 12722.0], [69.8, 12722.0], [69.9, 12722.0], [70.0, 12723.0], [70.1, 12723.0], [70.2, 12723.0], [70.3, 12724.0], [70.4, 12724.0], [70.5, 12725.0], [70.6, 12725.0], [70.7, 12725.0], [70.8, 12726.0], [70.9, 12726.0], [71.0, 12726.0], [71.1, 12726.0], [71.2, 12726.0], [71.3, 12726.0], [71.4, 12727.0], [71.5, 12727.0], [71.6, 12727.0], [71.7, 12728.0], [71.8, 12728.0], [71.9, 12728.0], [72.0, 12729.0], [72.1, 12729.0], [72.2, 12730.0], [72.3, 12731.0], [72.4, 12731.0], [72.5, 12731.0], [72.6, 12731.0], [72.7, 12732.0], [72.8, 12732.0], [72.9, 12733.0], [73.0, 12733.0], [73.1, 12733.0], [73.2, 12734.0], [73.3, 12734.0], [73.4, 12735.0], [73.5, 12735.0], [73.6, 12735.0], [73.7, 12735.0], [73.8, 12736.0], [73.9, 12736.0], [74.0, 12737.0], [74.1, 12737.0], [74.2, 12737.0], [74.3, 12737.0], [74.4, 12737.0], [74.5, 12737.0], [74.6, 12737.0], [74.7, 12738.0], [74.8, 12738.0], [74.9, 12738.0], [75.0, 12738.0], [75.1, 12739.0], [75.2, 12739.0], [75.3, 12739.0], [75.4, 12741.0], [75.5, 12741.0], [75.6, 12742.0], [75.7, 12742.0], [75.8, 12742.0], [75.9, 12743.0], [76.0, 12743.0], [76.1, 12743.0], [76.2, 12744.0], [76.3, 12744.0], [76.4, 12744.0], [76.5, 12746.0], [76.6, 12746.0], [76.7, 12747.0], [76.8, 12747.0], [76.9, 12747.0], [77.0, 12748.0], [77.1, 12748.0], [77.2, 12748.0], [77.3, 12749.0], [77.4, 12749.0], [77.5, 12749.0], [77.6, 12749.0], [77.7, 12749.0], [77.8, 12749.0], [77.9, 12750.0], [78.0, 12750.0], [78.1, 12750.0], [78.2, 12750.0], [78.3, 12750.0], [78.4, 12751.0], [78.5, 12751.0], [78.6, 12751.0], [78.7, 12751.0], [78.8, 12751.0], [78.9, 12752.0], [79.0, 12753.0], [79.1, 12753.0], [79.2, 12754.0], [79.3, 12754.0], [79.4, 12756.0], [79.5, 12756.0], [79.6, 12756.0], [79.7, 12757.0], [79.8, 12757.0], [79.9, 12758.0], [80.0, 12758.0], [80.1, 12759.0], [80.2, 12759.0], [80.3, 12759.0], [80.4, 12759.0], [80.5, 12759.0], [80.6, 12759.0], [80.7, 12759.0], [80.8, 12760.0], [80.9, 12761.0], [81.0, 12761.0], [81.1, 12761.0], [81.2, 12762.0], [81.3, 12762.0], [81.4, 12763.0], [81.5, 12763.0], [81.6, 12764.0], [81.7, 12765.0], [81.8, 12766.0], [81.9, 12766.0], [82.0, 12766.0], [82.1, 12768.0], [82.2, 12769.0], [82.3, 12769.0], [82.4, 12771.0], [82.5, 12771.0], [82.6, 12772.0], [82.7, 12774.0], [82.8, 12775.0], [82.9, 12775.0], [83.0, 12775.0], [83.1, 12775.0], [83.2, 12776.0], [83.3, 12778.0], [83.4, 12778.0], [83.5, 12779.0], [83.6, 12779.0], [83.7, 12779.0], [83.8, 12780.0], [83.9, 12782.0], [84.0, 12782.0], [84.1, 12784.0], [84.2, 12784.0], [84.3, 12784.0], [84.4, 12785.0], [84.5, 12786.0], [84.6, 12787.0], [84.7, 12788.0], [84.8, 12791.0], [84.9, 12791.0], [85.0, 12792.0], [85.1, 12793.0], [85.2, 12793.0], [85.3, 12794.0], [85.4, 12795.0], [85.5, 12795.0], [85.6, 12795.0], [85.7, 12797.0], [85.8, 12799.0], [85.9, 12800.0], [86.0, 12802.0], [86.1, 12803.0], [86.2, 12804.0], [86.3, 12805.0], [86.4, 12807.0], [86.5, 12810.0], [86.6, 12813.0], [86.7, 12830.0], [86.8, 12835.0], [86.9, 12835.0], [87.0, 12842.0], [87.1, 12845.0], [87.2, 12852.0], [87.3, 12861.0], [87.4, 12865.0], [87.5, 12870.0], [87.6, 12894.0], [87.7, 12895.0], [87.8, 12895.0], [87.9, 12896.0], [88.0, 12896.0], [88.1, 12984.0], [88.2, 12988.0], [88.3, 12995.0], [88.4, 12999.0], [88.5, 13000.0], [88.6, 13004.0], [88.7, 13010.0], [88.8, 13010.0], [88.9, 13015.0], [89.0, 13021.0], [89.1, 13051.0], [89.2, 13076.0], [89.3, 13084.0], [89.4, 13107.0], [89.5, 13109.0], [89.6, 13110.0], [89.7, 13110.0], [89.8, 13115.0], [89.9, 13123.0], [90.0, 13129.0], [90.1, 13132.0], [90.2, 13138.0], [90.3, 13144.0], [90.4, 13147.0], [90.5, 13158.0], [90.6, 13159.0], [90.7, 13174.0], [90.8, 13175.0], [90.9, 13178.0], [91.0, 13196.0], [91.1, 13206.0], [91.2, 13207.0], [91.3, 13217.0], [91.4, 13229.0], [91.5, 13229.0], [91.6, 13232.0], [91.7, 13239.0], [91.8, 13251.0], [91.9, 13251.0], [92.0, 13252.0], [92.1, 13258.0], [92.2, 13267.0], [92.3, 13269.0], [92.4, 13282.0], [92.5, 13286.0], [92.6, 13307.0], [92.7, 13315.0], [92.8, 13317.0], [92.9, 13321.0], [93.0, 13346.0], [93.1, 13359.0], [93.2, 13360.0], [93.3, 13409.0], [93.4, 13425.0], [93.5, 13435.0], [93.6, 13442.0], [93.7, 13442.0], [93.8, 13442.0], [93.9, 13446.0], [94.0, 13448.0], [94.1, 13459.0], [94.2, 13459.0], [94.3, 13460.0], [94.4, 13466.0], [94.5, 13473.0], [94.6, 13478.0], [94.7, 13480.0], [94.8, 13480.0], [94.9, 13481.0], [95.0, 13482.0], [95.1, 13484.0], [95.2, 13486.0], [95.3, 13489.0], [95.4, 13489.0], [95.5, 13490.0], [95.6, 13493.0], [95.7, 13496.0], [95.8, 13501.0], [95.9, 13502.0], [96.0, 13503.0], [96.1, 13505.0], [96.2, 13515.0], [96.3, 13515.0], [96.4, 13518.0], [96.5, 13523.0], [96.6, 13776.0], [96.7, 13781.0], [96.8, 13844.0], [96.9, 13847.0], [97.0, 13847.0], [97.1, 13851.0], [97.2, 13855.0], [97.3, 13858.0], [97.4, 13862.0], [97.5, 13870.0], [97.6, 13871.0], [97.7, 13871.0], [97.8, 14179.0], [97.9, 17034.0], [98.0, 17054.0], [98.1, 17057.0], [98.2, 17063.0], [98.3, 17063.0], [98.4, 17063.0], [98.5, 17066.0], [98.6, 17068.0], [98.7, 17071.0], [98.8, 17080.0], [98.9, 17083.0], [99.0, 17092.0], [99.1, 17092.0], [99.2, 17097.0], [99.3, 17098.0], [99.4, 17098.0], [99.5, 17101.0], [99.6, 17103.0], [99.7, 17129.0], [99.8, 17132.0], [99.9, 17193.0]], "isOverall": false, "label": "gens", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 4100.0, "maxY": 313.0, "series": [{"data": [[5400.0, 1.0], [5600.0, 4.0], [5800.0, 5.0], [5700.0, 3.0], [5900.0, 7.0], [6000.0, 11.0], [6100.0, 5.0], [6200.0, 4.0], [6300.0, 3.0], [6500.0, 5.0], [6400.0, 4.0], [6600.0, 7.0], [6900.0, 11.0], [6700.0, 5.0], [6800.0, 6.0], [7000.0, 15.0], [7100.0, 11.0], [7200.0, 9.0], [7300.0, 9.0], [7400.0, 14.0], [7500.0, 4.0], [7600.0, 3.0], [7800.0, 1.0], [7700.0, 1.0], [7900.0, 6.0], [8000.0, 4.0], [8100.0, 10.0], [8200.0, 8.0], [8300.0, 4.0], [8400.0, 1.0], [8700.0, 11.0], [8500.0, 2.0], [8600.0, 4.0], [8800.0, 3.0], [8900.0, 9.0], [9000.0, 6.0], [9100.0, 17.0], [9200.0, 20.0], [9300.0, 15.0], [9400.0, 7.0], [9500.0, 11.0], [9700.0, 9.0], [9600.0, 5.0], [9800.0, 4.0], [9900.0, 6.0], [10000.0, 6.0], [10100.0, 4.0], [10200.0, 15.0], [10300.0, 8.0], [10400.0, 6.0], [12900.0, 16.0], [13100.0, 17.0], [13000.0, 18.0], [13200.0, 11.0], [12800.0, 7.0], [17300.0, 89.0], [17100.0, 11.0], [17400.0, 157.0], [17200.0, 31.0], [17500.0, 159.0], [17600.0, 109.0], [17700.0, 25.0], [17800.0, 1.0]], "isOverall": false, "label": "主页", "isController": false}, {"data": [[8600.0, 21.0], [8700.0, 27.0], [9600.0, 220.0], [9700.0, 25.0], [9500.0, 3.0], [9800.0, 1.0], [11200.0, 41.0], [11300.0, 249.0], [11400.0, 66.0], [12000.0, 41.0], [12100.0, 18.0], [16900.0, 28.0], [17000.0, 12.0], [17100.0, 1.0], [6500.0, 74.0], [6600.0, 173.0]], "isOverall": false, "label": "igo", "isController": false}, {"data": [[11200.0, 11.0], [11300.0, 202.0], [11400.0, 45.0], [11500.0, 32.0], [11800.0, 81.0], [11900.0, 26.0], [4200.0, 41.0], [4100.0, 2.0], [5100.0, 179.0], [5200.0, 1.0], [5400.0, 60.0], [5500.0, 58.0], [5600.0, 12.0], [5700.0, 3.0], [7600.0, 70.0], [7700.0, 177.0]], "isOverall": false, "label": "game", "isController": false}, {"data": [[10100.0, 17.0], [10200.0, 14.0], [10400.0, 7.0], [10700.0, 19.0], [10500.0, 10.0], [11200.0, 7.0], [11100.0, 30.0], [11000.0, 17.0], [10800.0, 45.0], [10900.0, 5.0], [11500.0, 4.0], [11300.0, 10.0], [11400.0, 13.0], [11600.0, 10.0], [11700.0, 7.0], [12100.0, 3.0], [12200.0, 22.0], [11800.0, 1.0], [12400.0, 6.0], [12600.0, 313.0], [12300.0, 2.0], [12500.0, 18.0], [12700.0, 237.0], [13200.0, 15.0], [13100.0, 17.0], [13300.0, 7.0], [12900.0, 4.0], [13000.0, 9.0], [12800.0, 23.0], [13400.0, 25.0], [13800.0, 10.0], [13700.0, 2.0], [13500.0, 8.0], [14100.0, 1.0], [17000.0, 16.0], [17100.0, 5.0], [6500.0, 1.0], [6600.0, 3.0], [6900.0, 7.0], [6700.0, 1.0], [7100.0, 4.0], [7000.0, 11.0], [7200.0, 13.0], [7600.0, 1.0]], "isOverall": false, "label": "gens", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 17800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 4000.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 4000.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 4000.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 872.4147499999993, "minX": 1.65374124E12, "maxY": 872.4147499999993, "series": [{"data": [[1.65374124E12, 872.4147499999993]], "isOverall": false, "label": "线程组", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65374124E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 4194.0, "minX": 1.0, "maxY": 13951.546999999986, "series": [{"data": [[1000.0, 13951.546999999986]], "isOverall": false, "label": "主页", "isController": false}, {"data": [[1000.0, 13951.546999999986]], "isOverall": false, "label": "主页-Aggregated", "isController": false}, {"data": [[719.0, 11431.0], [734.0, 11442.5], [735.0, 11451.0], [728.0, 11434.0], [711.0, 11435.0], [710.0, 11439.5], [727.0, 11442.0], [722.0, 11449.0], [716.0, 11423.0], [715.0, 11395.0], [714.0, 11443.0], [713.0, 11420.5], [712.0, 11457.0], [750.0, 11429.0], [764.0, 11410.0], [763.0, 11437.0], [743.0, 11446.0], [739.0, 11372.0], [737.0, 11451.0], [736.0, 11436.5], [759.0, 11420.5], [758.0, 11399.0], [757.0, 11430.0], [749.0, 11431.0], [748.0, 11467.0], [747.0, 11441.0], [746.0, 11431.888888888889], [799.0, 11408.0], [795.0, 11420.666666666666], [790.0, 11423.0], [787.0, 11425.5], [784.0, 11439.0], [776.0, 11415.0], [828.0, 11421.0], [821.0, 11400.0], [820.0, 11415.0], [819.0, 11455.0], [817.0, 11423.0], [808.0, 11417.0], [805.0, 11456.0], [859.0, 11402.0], [861.0, 11412.0], [858.0, 11388.0], [857.0, 11405.0], [855.0, 11354.0], [853.0, 11407.0], [852.0, 11362.0], [847.0, 11378.0], [837.0, 11354.0], [836.0, 11393.0], [846.0, 11386.0], [844.0, 11408.666666666666], [843.0, 11382.333333333334], [894.0, 11379.0], [895.0, 11377.0], [890.0, 11382.0], [889.0, 11388.0], [888.0, 11351.0], [887.0, 11338.5], [886.0, 11386.0], [881.0, 11393.0], [878.0, 11398.0], [868.0, 11412.0], [925.0, 11336.0], [926.0, 11342.181818181818], [912.0, 11351.666666666666], [913.0, 11356.6], [915.0, 11352.333333333334], [924.0, 11338.0], [923.0, 11331.0], [922.0, 11353.041666666666], [921.0, 11348.428571428574], [920.0, 11347.620689655176], [900.0, 11370.285714285714], [906.0, 11386.0], [908.0, 11370.0], [909.0, 11374.0], [910.0, 11365.625], [911.0, 11360.666666666666], [919.0, 11358.619047619046], [918.0, 11337.0], [917.0, 11365.875000000002], [916.0, 11363.620689655174], [956.0, 11272.5], [953.0, 11308.0], [948.0, 11305.5], [941.0, 11289.0], [939.0, 11275.820512820512], [929.0, 11328.714285714286], [928.0, 11334.4], [975.0, 11302.0], [971.0, 11291.0], [1000.0, 9106.291925465834]], "isOverall": false, "label": "igo", "isController": false}, {"data": [[960.0809999999993, 9908.545000000002]], "isOverall": false, "label": "igo-Aggregated", "isController": false}, {"data": [[2.0, 5727.0], [3.0, 5673.0], [4.0, 5643.0], [5.0, 5647.0], [6.0, 5681.0], [7.0, 5792.0], [8.0, 5670.0], [9.0, 5590.0], [10.0, 5685.0], [12.0, 5716.0], [13.0, 5588.0], [14.0, 5631.0], [15.0, 5627.0], [16.0, 5652.0], [17.0, 5620.0], [18.0, 5569.0], [19.0, 5546.0], [20.0, 5534.0], [22.0, 5529.0], [23.0, 5526.0], [24.0, 5519.0], [26.0, 5520.0], [27.0, 5522.0], [28.0, 5554.0], [29.0, 5528.0], [30.0, 5522.0], [33.0, 5532.0], [32.0, 5519.0], [34.0, 5546.0], [37.0, 5535.0], [36.0, 5533.0], [38.0, 5530.0], [41.0, 5510.0], [40.0, 5528.5], [43.0, 5509.5], [45.0, 5511.0], [44.0, 5527.0], [47.0, 5532.0], [46.0, 5528.0], [49.0, 5537.0], [48.0, 5521.0], [51.0, 5511.0], [50.0, 5518.0], [53.0, 5502.0], [52.0, 5517.0], [55.0, 5526.0], [54.0, 5515.0], [57.0, 5514.0], [56.0, 5522.0], [59.0, 5509.0], [58.0, 5513.0], [61.0, 5515.0], [60.0, 5506.0], [63.0, 5488.0], [62.0, 5490.0], [67.0, 5468.0], [66.0, 5483.0], [65.0, 5488.0], [71.0, 5467.0], [70.0, 5490.0], [69.0, 5472.0], [68.0, 5491.0], [75.0, 5476.0], [74.0, 5468.0], [73.0, 5490.0], [72.0, 5471.0], [79.0, 5483.0], [78.0, 5515.0], [77.0, 5518.0], [76.0, 5490.0], [83.0, 5487.0], [82.0, 5481.0], [81.0, 5473.0], [80.0, 5472.0], [87.0, 5524.5], [85.0, 5501.0], [84.0, 5505.0], [91.0, 5479.5], [89.0, 5500.5], [95.0, 5478.0], [94.0, 5502.0], [93.0, 5488.0], [92.0, 5540.0], [99.0, 5495.0], [98.0, 5480.0], [97.0, 5500.0], [103.0, 5497.0], [102.0, 5497.0], [101.0, 5498.0], [100.0, 5512.0], [107.0, 5492.0], [106.0, 5482.0], [105.0, 5505.0], [104.0, 5494.0], [111.0, 5486.0], [110.0, 5476.0], [109.0, 5482.0], [108.0, 5499.0], [115.0, 5474.0], [114.0, 5492.0], [113.0, 5478.0], [112.0, 5480.0], [119.0, 5458.0], [118.0, 5464.0], [117.0, 5491.0], [116.0, 5490.0], [122.0, 5487.0], [121.0, 5476.0], [120.0, 5479.0], [127.0, 5445.0], [126.0, 5481.0], [125.0, 5453.0], [124.0, 5473.5], [135.0, 5199.0], [134.0, 5197.0], [133.0, 5460.0], [132.0, 5465.0], [131.0, 5440.0], [130.0, 5471.0], [129.0, 5470.0], [128.0, 5443.0], [143.0, 5203.0], [142.0, 5182.0], [141.0, 5172.0], [140.0, 5179.0], [139.0, 5184.0], [138.0, 5179.0], [137.0, 5170.0], [136.0, 5189.0], [150.0, 5177.0], [148.0, 5186.0], [147.0, 5173.0], [146.0, 5163.0], [145.0, 5192.0], [144.0, 5169.0], [159.0, 5199.0], [158.0, 5197.0], [157.0, 5175.0], [155.0, 5164.0], [154.0, 5167.0], [153.0, 5171.0], [152.0, 5179.5], [167.0, 5170.0], [165.0, 5154.0], [164.0, 5192.5], [163.0, 5168.0], [161.0, 5164.5], [175.0, 5179.0], [174.0, 5165.0], [173.0, 5154.0], [172.0, 5189.0], [171.0, 5161.0], [170.0, 5167.0], [169.0, 5149.0], [168.0, 5162.0], [183.0, 5184.0], [182.0, 5173.0], [180.0, 5162.0], [179.0, 5159.0], [178.0, 5193.0], [177.0, 5194.0], [176.0, 5155.0], [191.0, 5176.0], [189.0, 5169.5], [187.0, 5168.0], [185.0, 5179.5], [199.0, 5189.0], [198.0, 5182.0], [197.0, 5178.0], [195.0, 5189.0], [194.0, 5190.0], [193.0, 5188.0], [207.0, 5175.0], [206.0, 5147.0], [205.0, 5148.0], [204.0, 5178.0], [203.0, 5172.0], [201.0, 5178.5], [215.0, 5178.0], [214.0, 5179.0], [211.0, 5177.0], [210.0, 5181.0], [209.0, 5180.5], [222.0, 5175.0], [221.0, 5176.0], [220.0, 5182.0], [217.0, 5169.5], [231.0, 5161.0], [229.0, 5170.0], [228.0, 5165.5], [225.0, 5179.5], [239.0, 5150.5], [236.0, 5175.0], [235.0, 5169.0], [233.0, 5176.5], [245.0, 5170.0], [242.0, 5130.0], [255.0, 5173.0], [254.0, 5162.0], [253.0, 5173.0], [252.0, 5161.0], [251.0, 5172.0], [250.0, 5170.5], [248.0, 5168.0], [269.0, 5165.0], [270.0, 5131.0], [268.0, 5166.0], [259.0, 5168.0], [258.0, 5170.0], [257.0, 5156.0], [256.0, 5169.0], [267.0, 5156.0], [266.0, 5158.625], [264.0, 5155.0], [263.0, 5164.0], [262.0, 5162.5], [261.0, 5160.5], [260.0, 5165.0], [284.0, 5157.0], [286.0, 5163.0], [287.0, 5154.0], [285.0, 5169.0], [282.0, 5156.0], [280.0, 5158.5], [278.0, 5168.0], [273.0, 5163.0], [272.0, 5162.5], [275.0, 5150.0], [274.0, 5157.0], [277.0, 5158.0], [276.0, 5162.0], [301.0, 5148.0], [303.0, 5144.0], [300.0, 5145.0], [291.0, 5161.0], [290.0, 5161.0], [289.0, 5157.0], [288.0, 5151.0], [299.0, 5147.0], [298.0, 5146.0], [297.0, 5154.0], [296.0, 5144.0], [295.0, 5160.0], [294.0, 5142.0], [293.0, 5141.0], [292.0, 5152.0], [318.0, 4240.0], [319.0, 4222.0], [317.0, 4222.0], [316.0, 4218.0], [315.0, 4224.0], [314.0, 4221.0], [313.0, 5134.0], [311.0, 5146.0], [305.0, 5139.0], [304.0, 5147.0], [307.0, 5146.0], [306.0, 5138.0], [310.0, 5141.0], [309.0, 5146.0], [308.0, 5148.0], [323.0, 4225.0], [334.0, 4211.5], [332.0, 4217.0], [331.0, 4225.5], [329.0, 4220.0], [328.0, 4221.0], [326.0, 4218.0], [325.0, 4217.0], [324.0, 4209.0], [322.0, 4223.0], [321.0, 4223.0], [320.0, 4229.0], [349.0, 4203.0], [351.0, 4203.0], [348.0, 4194.0], [339.0, 4226.0], [338.0, 4215.5], [336.0, 4207.5], [347.0, 4207.0], [346.0, 4214.0], [345.0, 4214.0], [344.0, 4206.0], [343.0, 4216.0], [342.0, 4224.0], [341.0, 4203.0], [340.0, 4229.0], [356.0, 4197.0], [354.0, 4205.0], [353.0, 4206.0], [352.0, 4205.0], [444.0, 7731.0], [440.0, 7711.0], [458.0, 7714.0], [455.0, 7706.0], [454.0, 7717.0], [477.0, 7717.0], [467.0, 7717.0], [464.0, 7736.0], [495.0, 7712.0], [494.0, 7708.0], [492.0, 7700.0], [491.0, 7698.0], [490.0, 7708.588235294119], [489.0, 7714.5], [486.0, 7706.0], [511.0, 7689.0], [509.0, 7708.0], [507.0, 7729.0], [506.0, 7716.0], [505.0, 7694.0], [502.0, 7712.0], [501.0, 7702.0], [499.0, 7722.0], [497.0, 7710.0], [542.0, 7696.5], [543.0, 11877.0], [529.0, 11890.0], [540.0, 7710.5], [538.0, 7709.0], [537.0, 7710.0], [536.0, 7726.0], [527.0, 7709.5], [514.0, 7723.0], [512.0, 7701.666666666667], [519.0, 7694.0], [515.0, 7707.0], [525.0, 8420.666666666666], [524.0, 8544.2], [523.0, 8180.642857142861], [522.0, 7702.0], [521.0, 7718.0], [535.0, 9806.0], [533.0, 9809.0], [531.0, 9806.0], [530.0, 9799.5], [562.0, 7736.0], [573.0, 7749.0], [574.0, 7739.0], [561.0, 7727.0], [560.0, 7696.0], [572.0, 7713.0], [571.0, 7749.5], [569.0, 9813.0], [551.0, 9803.0], [549.0, 7719.0], [548.0, 9808.5], [546.0, 7744.0], [544.0, 11907.0], [558.0, 9815.0], [556.0, 10500.333333333334], [554.0, 9809.0], [552.0, 11887.0], [567.0, 7717.5], [565.0, 11926.0], [564.0, 9822.5], [601.0, 9804.5], [593.0, 7704.0], [606.0, 9805.5], [604.0, 11895.0], [603.0, 9789.0], [591.0, 7723.0], [576.0, 7696.0], [579.0, 7689.0], [577.0, 7735.0], [581.0, 11899.0], [580.0, 7704.0], [583.0, 9808.5], [582.0, 7706.0], [590.0, 11876.0], [589.0, 7720.0], [588.0, 7707.0], [587.0, 7699.0], [586.0, 7708.0], [585.0, 11897.0], [584.0, 9088.0], [599.0, 7701.5], [597.0, 9804.5], [595.0, 9819.5], [592.0, 11921.0], [632.0, 9787.5], [637.0, 7709.0], [638.0, 7692.5], [625.0, 7678.0], [624.0, 11901.0], [635.0, 11873.0], [634.0, 11878.0], [633.0, 7692.0], [623.0, 7720.0], [608.0, 11888.0], [611.0, 7711.0], [610.0, 9807.0], [613.0, 11874.0], [612.0, 7700.0], [615.0, 7693.0], [614.0, 7681.0], [622.0, 7693.5], [620.0, 7687.0], [619.0, 11907.0], [618.0, 11861.0], [617.0, 7687.0], [616.0, 7702.0], [630.0, 9787.0], [628.0, 11861.0], [627.0, 7719.0], [626.0, 7678.0], [665.0, 7717.0], [670.0, 11871.0], [671.0, 11846.0], [656.0, 11870.0], [658.0, 11873.0], [657.0, 11866.0], [661.0, 11862.5], [659.0, 7693.0], [669.0, 9786.5], [667.0, 11859.0], [666.0, 11858.0], [664.0, 11852.0], [647.0, 11880.0], [646.0, 7678.0], [645.0, 7717.0], [643.0, 7700.5], [641.0, 11888.0], [640.0, 7707.5], [655.0, 11856.0], [654.0, 11851.0], [653.0, 11854.0], [652.0, 7691.0], [651.0, 7695.0], [650.0, 7708.0], [649.0, 11868.0], [648.0, 7691.0], [663.0, 11857.0], [662.0, 7700.0], [696.0, 11843.0], [700.0, 11867.0], [702.0, 11860.5], [689.0, 11867.0], [688.0, 11845.0], [691.0, 11847.0], [690.0, 11847.0], [699.0, 11846.0], [698.0, 11838.0], [697.0, 11869.0], [687.0, 11839.0], [672.0, 7708.0], [674.0, 7701.0], [673.0, 11874.0], [677.0, 7693.0], [676.0, 9776.0], [679.0, 11854.0], [678.0, 11853.0], [686.0, 11871.0], [685.0, 11849.0], [684.0, 11864.0], [683.0, 11871.0], [682.0, 11850.0], [681.0, 11853.0], [680.0, 7693.0], [695.0, 11863.0], [694.0, 11843.0], [693.0, 11859.0], [692.0, 11861.0], [732.0, 11495.0], [734.0, 11570.0], [735.0, 11510.0], [733.0, 11568.0], [731.0, 11515.0], [710.0, 11859.0], [709.0, 11846.0], [708.0, 11836.0], [707.0, 11837.0], [706.0, 11864.0], [705.0, 11856.0], [704.0, 11848.0], [727.0, 11566.0], [724.0, 11518.0], [716.0, 11565.0], [715.0, 11432.0], [714.0, 11540.0], [713.0, 11560.0], [712.0, 11564.0], [742.0, 11401.0], [767.0, 11505.0], [762.0, 11551.0], [758.0, 11489.0], [756.0, 11495.0], [753.0, 11549.0], [751.0, 11494.0], [746.0, 11534.2], [745.0, 11564.0], [740.0, 11565.0], [739.0, 11549.5], [737.0, 11569.0], [736.0, 11535.0], [792.0, 11463.0], [799.0, 11493.0], [796.0, 11499.0], [795.0, 11475.0], [790.0, 11480.0], [783.0, 11514.0], [771.0, 11535.0], [769.0, 11530.0], [780.0, 11492.0], [778.0, 11518.0], [775.0, 11554.0], [773.0, 11475.0], [807.0, 11479.0], [827.0, 11468.0], [825.0, 11502.0], [823.0, 11466.0], [821.0, 11484.0], [816.0, 11498.0], [814.0, 11493.0], [812.0, 11503.0], [810.0, 11498.0], [804.0, 11477.0], [801.0, 11475.0], [853.0, 11473.0], [852.0, 11459.0], [842.0, 11419.0], [840.0, 11367.0], [836.0, 11457.0], [834.0, 11421.0], [922.0, 11495.0], [906.0, 11436.0], [916.0, 11398.0], [910.0, 11378.5], [947.0, 11327.0], [957.0, 11385.0], [959.0, 11345.0], [945.0, 11326.0], [944.0, 11351.0], [956.0, 11350.0], [955.0, 11343.0], [953.0, 11349.0], [929.0, 11448.0], [943.0, 11293.666666666666], [941.0, 11354.5], [940.0, 11344.333333333334], [939.0, 11362.407643312104], [951.0, 11326.0], [950.0, 11340.5], [948.0, 11348.0], [988.0, 11328.0], [991.0, 11327.0], [976.0, 11336.0], [978.0, 11346.0], [977.0, 11335.0], [980.0, 11381.0], [979.0, 11344.0], [990.0, 11332.0], [989.0, 11330.0], [987.0, 11330.0], [986.0, 11341.0], [985.0, 11305.0], [984.0, 11325.0], [975.0, 11379.0], [963.0, 11328.0], [961.0, 11343.0], [965.0, 11397.0], [964.0, 11342.5], [967.0, 11380.0], [966.0, 11397.0], [974.0, 11334.0], [973.0, 11371.0], [972.0, 11365.0], [970.0, 11374.0], [969.0, 11381.0], [968.0, 11337.0], [983.0, 11331.0], [981.0, 11331.0], [1000.0, 11319.0], [999.0, 11316.0], [998.0, 11333.0], [997.0, 11333.0], [996.0, 11338.0], [995.0, 11322.0], [994.0, 11322.0], [993.0, 11332.0], [992.0, 11331.0], [1.0, 5649.0]], "isOverall": false, "label": "game", "isController": false}, {"data": [[529.5690000000003, 8323.34599999999]], "isOverall": false, "label": "game-Aggregated", "isController": false}, {"data": [[1000.0, 12226.397000000012]], "isOverall": false, "label": "gens", "isController": false}, {"data": [[1000.0, 12226.397000000012]], "isOverall": false, "label": "gens-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 7983.333333333333, "minX": 1.65374124E12, "maxY": 414658.4666666667, "series": [{"data": [[1.65374124E12, 414658.4666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.65374124E12, 7983.333333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65374124E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 8323.34599999999, "minX": 1.65374124E12, "maxY": 13951.546999999986, "series": [{"data": [[1.65374124E12, 13951.546999999986]], "isOverall": false, "label": "主页", "isController": false}, {"data": [[1.65374124E12, 9908.545000000002]], "isOverall": false, "label": "igo", "isController": false}, {"data": [[1.65374124E12, 8323.34599999999]], "isOverall": false, "label": "game", "isController": false}, {"data": [[1.65374124E12, 12226.397000000012]], "isOverall": false, "label": "gens", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65374124E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 8308.628999999999, "minX": 1.65374124E12, "maxY": 13947.56899999999, "series": [{"data": [[1.65374124E12, 13947.56899999999]], "isOverall": false, "label": "主页", "isController": false}, {"data": [[1.65374124E12, 9892.049999999997]], "isOverall": false, "label": "igo", "isController": false}, {"data": [[1.65374124E12, 8308.628999999999]], "isOverall": false, "label": "game", "isController": false}, {"data": [[1.65374124E12, 12217.14099999999]], "isOverall": false, "label": "gens", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65374124E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.65374124E12, "maxY": 6958.345, "series": [{"data": [[1.65374124E12, 6958.345]], "isOverall": false, "label": "主页", "isController": false}, {"data": [[1.65374124E12, 0.0]], "isOverall": false, "label": "igo", "isController": false}, {"data": [[1.65374124E12, 0.0]], "isOverall": false, "label": "game", "isController": false}, {"data": [[1.65374124E12, 0.0]], "isOverall": false, "label": "gens", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65374124E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 4188.0, "minX": 1.65374124E12, "maxY": 17867.0, "series": [{"data": [[1.65374124E12, 17867.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.65374124E12, 17434.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.65374124E12, 17678.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.65374124E12, 17552.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.65374124E12, 4188.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.65374124E12, 11358.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65374124E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 4216.0, "minX": 1.0, "maxY": 17642.0, "series": [{"data": [[542.0, 17487.0], [135.0, 11446.0], [36.0, 8143.0], [40.0, 17642.0], [43.0, 4216.0], [48.0, 10810.5], [893.0, 12659.0], [56.0, 6049.0], [247.0, 6609.0], [63.0, 10144.0], [1.0, 5471.0], [308.0, 11681.5], [313.0, 5186.0], [88.0, 7152.5], [354.0, 7717.0], [105.0, 9202.0], [107.0, 12045.0], [110.0, 12944.0], [511.0, 11354.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 893.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 4211.0, "minX": 1.0, "maxY": 17642.0, "series": [{"data": [[542.0, 17487.0], [135.0, 11325.0], [36.0, 8132.5], [40.0, 17642.0], [43.0, 4211.0], [48.0, 10806.5], [893.0, 12652.0], [56.0, 6048.5], [247.0, 6606.0], [63.0, 10143.0], [1.0, 5466.0], [308.0, 11674.5], [313.0, 5177.0], [88.0, 7120.0], [354.0, 7706.0], [105.0, 9184.0], [107.0, 12043.0], [110.0, 12943.0], [511.0, 11349.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 893.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 66.66666666666667, "minX": 1.65374124E12, "maxY": 66.66666666666667, "series": [{"data": [[1.65374124E12, 66.66666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65374124E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 66.66666666666667, "minX": 1.65374124E12, "maxY": 66.66666666666667, "series": [{"data": [[1.65374124E12, 66.66666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65374124E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.65374124E12, "maxY": 16.666666666666668, "series": [{"data": [[1.65374124E12, 16.666666666666668]], "isOverall": false, "label": "gens-success", "isController": false}, {"data": [[1.65374124E12, 16.666666666666668]], "isOverall": false, "label": "igo-success", "isController": false}, {"data": [[1.65374124E12, 16.666666666666668]], "isOverall": false, "label": "game-success", "isController": false}, {"data": [[1.65374124E12, 16.666666666666668]], "isOverall": false, "label": "主页-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65374124E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 66.66666666666667, "minX": 1.65374124E12, "maxY": 66.66666666666667, "series": [{"data": [[1.65374124E12, 66.66666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65374124E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

